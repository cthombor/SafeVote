[{"path":"https://cthombor.github.io/SafeVote/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clark Thomborson. Maintainer.","code":""},{"path":"https://cthombor.github.io/SafeVote/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomborson C (2022). SafeVote: Election Vote Counting Safety Features. R package version 0.97, https://cthombor.github.io/SafeVote/.","code":"@Manual{,   title = {SafeVote: Election Vote Counting with Safety Features},   author = {Clark Thomborson},   year = {2022},   note = {R package version 0.97},   url = {https://cthombor.github.io/SafeVote/}, }"},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"safevote","dir":"","previous_headings":"","what":"Election Vote Counting with Safety Features","title":"Election Vote Counting with Safety Features","text":"goals SafeVote investigate safety announcing preliminary results election, allow experimental study safety complete ranking candidates (party list) derived small-scale election preferential ballots.","code":""},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Election Vote Counting with Safety Features","text":"can install development version SafeVote GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cthombor/SafeVote\")"},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Election Vote Counting with Safety Features","text":"mod vote_2.3.2 reports Margins victory election. cases near-ties, value safety parameter (default 1.0) affect completeness SafeRank ordering candidates. safety-testing routines supplied, support experimental study statistical behaviour ballot counting methods. example:","code":"library(SafeVote) data(food_election) stv(food_election, complete.ranking=TRUE, safety=0.5) data(dublin_west) testDeletions(dublin_west, countMethod=\"stv\", rankMethod=\"elected\",               countArgs=list(nseats=3))"},{"path":"https://cthombor.github.io/SafeVote/reference/SafeVote-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","title":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","text":"Experimental fork vote_2.3-2, SafeRank safety tests.","code":""},{"path":[]},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the approval method — approval","title":"Count votes using the approval method — approval","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the approval method — approval","text":"","code":"approval(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the approval method — approval","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the approval method — approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.score","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.score","text":"","code":"assemble.args.for.check.score(x, max.score = NULL, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.score","text":"x, max.score, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.stv","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.stv","text":"","code":"assemble.args.for.check.stv(x, equal.ranking = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.stv","text":"x, equal.ranking, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — backwards.tiebreak","title":"Undocumented internal method — backwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — backwards.tiebreak","text":"","code":"backwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — backwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter-checking method for nseats (not exported) — check.nseats","title":"parameter-checking method for nseats (not exported) — check.nseats","text":"parameter-checking method nseats (exported)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter-checking method for nseats (not exported) — check.nseats","text":"","code":"check.nseats(   nseats = NULL,   ncandidates,   default = 1,   mcan = NULL,   complete.ranking = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parameter-checking method for nseats (not exported) — check.nseats","text":"nseats initially-specified number seats filled election ncandidates number candidates standing election default return value function nseats=NULL mcan deprecated name nseats complete.ranking TRUE, return value 1..ncandidates FALSE, return value 1..ncandidates-1 (backwards compatibility)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parameter-checking method for nseats (not exported) — check.nseats","text":"valid non-NULL value number seats filled","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter-checking method for nseats (not exported) — check.nseats","text":"","code":"## appropriately default nseats, when testing stv() with five candidates      nc<-5    nseats<-NULL    nseats<-SafeVote:::check.nseats(nseats=nseats,        ncandidates=nc, default=floor(nc/2)) # https://www.r-bloggers.com/2021/06/documentation-for-internal-functions/     ## appropriately default nseats, when using stv() to rank candidates     nc<-5    nseats<-NULL    nseats<-SafeVote:::check.nseats(nseats=nseats, ncandidates=nc,       complete.ranking=TRUE, default=nc)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"check the validity of a partial ranking — check.ranking","title":"check the validity of a partial ranking — check.ranking","text":"check validity partial ranking","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the validity of a partial ranking — check.ranking","text":"","code":"check.ranking(r)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check the validity of a partial ranking — check.ranking","text":"r numeric vector","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check the validity of a partial ranking — check.ranking","text":"partial ranking elements `r`, using `ties.method=\"min\"`","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.approval","title":"undocumented internal method — check.votes.approval","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.approval","text":"","code":"check.votes.approval(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.approval","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.condorcet","title":"undocumented internal method — check.votes.condorcet","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.condorcet","text":"","code":"check.votes.condorcet(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.condorcet","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.condorcet","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes","title":"undocumented internal method — check.votes","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes","text":"","code":"check.votes(x, ..., quiet = FALSE)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes","text":"x, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.plurality","title":"undocumented internal method — check.votes.plurality","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.plurality","text":"","code":"check.votes.plurality(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.plurality","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.score","title":"undocumented internal method — check.votes.score","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.score","text":"","code":"check.votes.score(record, max.score, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.score","text":"record, max.score, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.stv","title":"undocumented internal method — check.votes.stv","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.stv","text":"","code":"check.votes.stv(record, equal.ranking = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.stv","text":"record, equal.ranking, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.stv","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.tworound.runoff","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.tworound.runoff","text":"","code":"check.votes.tworound.runoff(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.tworound.runoff","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":null,"dir":"Reference","previous_headings":"","what":"the least upper bound on a pair of rankings — combineRankings","title":"the least upper bound on a pair of rankings — combineRankings","text":"least upper bound pair rankings","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings(r1, r2)"},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the least upper bound on a pair of rankings — combineRankings","text":"r1, r2 numeric vectors","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the least upper bound on a pair of rankings — combineRankings","text":"complete (possibly partial) ranking consistent  r1 r2.  Uses `ties.method=\"min\"`","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings( c(3,1,2), c(2,1,3) ) #> [1] 2 1 2"},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"internal method analyse partial results stv() ballot count, discover complete ranking candidates.  ranking may depend value nseats, affects votes transferred.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"","code":"completeRankingTable(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"object partial results ... undocumented, currently unused","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"data.frame columns Rank, Margin, Candidate, Elected, SafeRank","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the Condorcet voting method. — condorcet","title":"Count votes using the Condorcet voting method. — condorcet","text":"Condorcet method elects candidate wins majority ranked vote every head head election candidates. Condorcet winner candidate beats candidates pairwise comparisons. Analogously, Condorcet loser candidate loses candidates. Neither Condorcet winner loser might exist.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"condorcet(   votes,   runoff = FALSE,   nseats = 1,   safety = 1,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the Condorcet voting method. — condorcet","text":"votes [Matrix] [data frame] containing votes. Rows correspond votes, columns correspond candidates. `votes` character string, interpreted file name votes read. See details. runoff Logical. [TRUE] Condorcet winner exists, election goes run-, see details. nseats number seats filled election safety Parameter clustering heuristic total ranking candidates.  Conjecture: default `1.0` ensures separation one s.d. clusters, `votes` .u.d. permutations candidates. fsep `votes` file name, argument gives column separator file. quiet [TRUE] output printed. ... Additional arguments passed underlying functions.  [image] function, see arguments [image.SafeVote.stv], especially [xpref], [ypref], [.pref] [proportion].","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the Condorcet voting method. — condorcet","text":"Object class SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count votes using the Condorcet voting method. — condorcet","text":"runoff argument set `TRUE` Condorcet winner exists, two candidates pairwise wins selected method applied subset. two candidates run-, selection performed repeatedly, either winner selected selection possible. input data votes structured way [stv] method:  Row `` contains preferences voter `` numbered  `1; 2; : : : ; r; 0; 0; 0; 0`, order, equal preferences allowed. columns correspond candidates. [dimnames] columns names candidates; supplied candidates lettered `, B, C, ...`. dataset  contains missing values ([NA]), replaced zeros. Note equal preferences used, automatically converted format , preference $$ duplicate, must exactly $- 1$ preferences $j$ $0 < j < $.  ranking one obtain  `rank(x, ties.method = \"min\")`. conversion vote occurs,  warning issued. done internally calling [correct.ranking] function. method also computes Borda ranking candidates, using tournament-style scoring.  ranking \"fuzzed\" SafeRank, approximately 1 s.d. fuzz `safety` = 1.0 voter preferences .u.d.  warning thrown SafeRank violates (extended) Condorcet principle: Candidate $$ highly ranked Candidate $j$ majority voters agree .","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"{ data(food_election) condorcet(food_election) } #>  #> Results of Condorcet voting #> ===========================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          1 #>  #>  #> |             | Oranges| Pears| Chocolate| Strawberries| Sweets| Total| Score | BordaRank | margin| SafeRank| Winner| Loser| #> |:------------|-------:|-----:|---------:|------------:|------:|-----:|:-----:|:---------:|------:|--------:|------:|-----:| #> |Oranges      |       0|     1|         0|            0|      1|     2|  22   |     3     |      6|        2|       |      | #> |Pears        |       0|     0|         0|            0|      0|     0|   8   |     5     |     NA|        2|       |     x| #> |Chocolate    |       1|     1|         0|            1|      1|     4|  48   |     1     |     20|        1|      x|      | #> |Strawberries |       1|     1|         0|            0|      1|     3|  28   |     2     |      6|        2|       |      | #> |Sweets       |       0|     1|         0|            0|      0|     1|  16   |     4     |      8|        2|       |      | #>  #> safeRank fuzz on Borda scores: 8.944272 #> Gaps in Borda scores: min 6 mean 9.6 max 20 ; all 6 6 8 8 20 #> Condorcet winner: Chocolate #> Condorcet loser: Pears #>"},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — correct.ranking","title":"undocumented internal method — correct.ranking","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — correct.ranking","text":"","code":"correct.ranking(votes, partial = FALSE, quiet = FALSE)"},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — correct.ranking","text":"votes, partial, quiet undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — correct.ranking","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":".print method for summary object — .print.summary.SafeVote","title":".print method for summary object — .print.summary.SafeVote","text":".print method summary object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".print method for summary object — .print.summary.SafeVote","text":"","code":".print.summary.SafeVote(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".print method for summary object — .print.summary.SafeVote","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".print method for summary object — .print.summary.SafeVote","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":".summary method for objects in SafeRank class — .summary.SafeVote","title":".summary method for objects in SafeRank class — .summary.SafeVote","text":".summary method objects SafeRank class","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".summary method for objects in SafeRank class — .summary.SafeVote","text":"","code":".summary.SafeVote(object, larger.wins = TRUE, reorder = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".summary method for objects in SafeRank class — .summary.SafeVote","text":"object, larger.wins, reorder undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".summary method for objects in SafeRank class — .summary.SafeVote","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":null,"dir":"Reference","previous_headings":"","what":"Dublin West — dublin_west","title":"Dublin West — dublin_west","text":"Dataset containing ranked votes Dublin West  constituency 2002, Ireland. Results STV election can viewed https://en.wikipedia.org/wiki/Dublin_West#2002_general_election.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dublin West — dublin_west","text":"","code":"data(dublin_west)"},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dublin West — dublin_west","text":"data frame 29988 observations 9 candidates. record  corresponds one ballot candidates ranked 1 9  zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — election.info","title":"undocumented internal method — election.info","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — election.info","text":"","code":"election.info(x)"},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — election.info","text":"x undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — election.info","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a ranking vector by name from the results of a ballot count — extractRank","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"Extract ranking vector name results ballot count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"","code":"extractRank(rankMethod, countMethod, cr)"},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"rankMethod e.g. \"elected\" countMethod e.g. \"stv\" cr structure returned ballot-counting method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"numeric ranking vector, order colnames(cr$data)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":null,"dir":"Reference","previous_headings":"","what":"Food Election — food_election","title":"Food Election — food_election","text":"Sample data testing SafeVote","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Food Election — food_election","text":"","code":"data(food_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Food Election — food_election","text":"data frame 20 observations 5 candidates (Oranges,    Pears, Chocolate, Strawberries, Sweets). record corresponds    one ballot ranking candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — forwards.tiebreak","title":"Undocumented internal method — forwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — forwards.tiebreak","text":"","code":"forwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — forwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"The image function visualizes the joint distribution of two preferences\n(if `all.pref=FALSE`) given `xpref` and `ypref`, as well as the marginal\ndistribution of all preferences (if `all.pref=TRUE`). The joint distribution\ncan be shown as proportions (if `proportion=TRUE`) or raw vote counts\n(if `proportion=FALSE`). — image.SafeVote.condorcet","title":"The image function visualizes the joint distribution of two preferences\n(if `all.pref=FALSE`) given `xpref` and `ypref`, as well as the marginal\ndistribution of all preferences (if `all.pref=TRUE`). The joint distribution\ncan be shown as proportions (if `proportion=TRUE`) or raw vote counts\n(if `proportion=FALSE`). — image.SafeVote.condorcet","text":"image function visualizes joint distribution two preferences (`.pref=FALSE`) given `xpref` `ypref`, well marginal distribution preferences (`.pref=TRUE`). joint distribution can shown proportions (`proportion=TRUE`) raw vote counts (`proportion=FALSE`).","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The image function visualizes the joint distribution of two preferences\n(if `all.pref=FALSE`) given `xpref` and `ypref`, as well as the marginal\ndistribution of all preferences (if `all.pref=TRUE`). The joint distribution\ncan be shown as proportions (if `proportion=TRUE`) or raw vote counts\n(if `proportion=FALSE`). — image.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet image(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The image function visualizes the joint distribution of two preferences\n(if `all.pref=FALSE`) given `xpref` and `ypref`, as well as the marginal\ndistribution of all preferences (if `all.pref=TRUE`). The joint distribution\ncan be shown as proportions (if `proportion=TRUE`) or raw vote counts\n(if `proportion=FALSE`). — image.SafeVote.condorcet","text":"x object type SafeVote.condorcet ... See arguments [image.SafeVote.stv], especially [xpref], [ypref], [.pref] [proportion].","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"image() method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv image(x, xpref = 2, ypref = 1, all.pref = FALSE, proportion = TRUE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"x, xpref, ypref, .pref, proportion, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"image object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Approval — ims_approval","title":"IMS Approval — ims_approval","text":"Modified version ims_election, use approval voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Approval — ims_approval","text":"","code":"data(ims_approval)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Approval — ims_approval","text":"data frame 620 observations 10 candidates (names  made ). record corresponds one ballot, 0 indicating disapproval candidate 1 indicating approval.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Election — ims_election","title":"IMS Election — ims_election","text":"Datasets containing anonymized votes past Council  election Institute Mathematical Statistics (IMS). dataset  ims_election original dataset used single transferable vote,  candidate names changed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Election — ims_election","text":"","code":"data(ims_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Election — ims_election","text":"data frame 620 observations 10 candidates (names  made ). record corresponds one ballot. IMS Council voting  done using STV method, thus ims_election dataset contains  ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Plurality — ims_plurality","title":"IMS Plurality — ims_plurality","text":"Modified version ims_election, use plurality voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Plurality — ims_plurality","text":"","code":"data(ims_plurality)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Plurality — ims_plurality","text":"data frame 620 observations 10 candidates (names  made ). record corresponds one ballot, 1 voter's -preferred candidate 0 candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Score — ims_score","title":"IMS Score — ims_score","text":"Modified version ims_election, use score voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Score — ims_score","text":"","code":"data(ims_score)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Score — ims_score","text":"data frame 620 observations 10 candidates (names  made ). record corresponds one ballot, higher values indicating -preferred candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS STV — ims_stv","title":"IMS STV — ims_stv","text":"Copy ims_election, included backwards compatibility.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS STV — ims_stv","text":"","code":"data(ims_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS STV — ims_stv","text":"data frame 620 observations 10 candidates (names  made ). record corresponds one ballot. IMS Council voting  done using STV method, thus ims_election dataset contains  ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — is.valid.vote","title":"undocumented internal method — is.valid.vote","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — is.valid.vote","text":"","code":"is.valid.vote(x, method, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — is.valid.vote","text":"x, method, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — is.valid.vote","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a loser and their margin of victory — loserMargin","title":"Find a loser and their margin of victory — loserMargin","text":"Find loser margin victory","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a loser and their margin of victory — loserMargin","text":"","code":"loserMargin(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a loser and their margin of victory — loserMargin","text":"votes cleaned ballots","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a loser and their margin of victory — loserMargin","text":"length-2 vector: index losing candidate, margin         loss (0 tie, NA winners)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"Constructor results SafeRank experiment","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"","code":"new_SafeRankExpt(   nBallots = integer(0),   ranks = matrix(),   margins = matrix(),   countMethod = NULL,   rankMethod = NULL,   datasetName = NULL,   experimentalMethod = NULL,   otherFactors = list() )"},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"nBallots primary factor: number ballots counted experimental unit ranks matrix colnames(ballots), one row per experimental unit margins matrix colnames(ballots), one row per unit countMethod secondary factor: counting method e.g. \"stv\" rankMethod secondary factor: ranking method e.g. \"elected\" datasetName secondary factor: name dataset ballots experimentalMethod secondary factor: name method simulated elections e.g. \"testFraction\" otherFactors secondary factors, e.g. parameters experimentalMethod, timestamp.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"object class SafeRankExpt","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.preferences","title":"Undocumented internal method — ordered.preferences","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.preferences","text":"","code":"ordered.preferences(vmat)"},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.preferences","text":"vmat undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.tiebreak","title":"Undocumented internal method — ordered.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.tiebreak","text":"","code":"ordered.tiebreak(vmat, seed = NULL)"},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.tiebreak","text":"vmat undocumented seed undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"plot() method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv plot(x, xlab = \"Count\", ylab = \"Preferences\", point.size = 2, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"x, xlab, ylab, point.size, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the plurality method — plurality","title":"Count votes using the plurality method — plurality","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the plurality method — plurality","text":"","code":"plurality(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the plurality method — plurality","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the plurality method — plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — prepare.votes","title":"undocumented internal method — prepare.votes","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — prepare.votes","text":"","code":"prepare.votes(data, fsep = \"\\n\")"},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — prepare.votes","text":"data, fsep undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — prepare.votes","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary object — print.summary.SafeVote.approval","title":"print method for summary object — print.summary.SafeVote.approval","text":"print method summary object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary object — print.summary.SafeVote.approval","text":"","code":"# S3 method for summary.SafeVote.approval print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary object — print.summary.SafeVote.approval","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary object — print.summary.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"print method summary.SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"","code":"# S3 method for summary.SafeVote.condorcet print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"x object type summary.SafeVote.condorcet ... parameters passed generic [print]","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"textual description `x`","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary of plurality object — print.summary.SafeVote.plurality","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"print method summary plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"","code":"# S3 method for summary.SafeVote.plurality print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.score object — print.summary.SafeVote.score","title":"print method for summary.score object — print.summary.SafeVote.score","text":"print method summary.score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.score object — print.summary.SafeVote.score","text":"","code":"# S3 method for summary.SafeVote.score print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.score object — print.summary.SafeVote.score","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.score object — print.summary.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"print() method summary() SafeVote result","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"","code":"# S3 method for summary.SafeVote.stv print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"x undocumented ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — remove.candidate","title":"undocumented internal method — remove.candidate","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — remove.candidate","text":"","code":"remove.candidate(votes, can, quiet = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — remove.candidate","text":"votes, can, quiet undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — remove.candidate","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the score (or range) method. — score","title":"Count votes using the score (or range) method. — score","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the score (or range) method. — score","text":"","code":"score(   votes,   nseats = 1,   max.score = NULL,   larger.wins = TRUE,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the score (or range) method. — score","text":"votes, nseats, max.score, larger.wins, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the score (or range) method. — score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"Undocumented internal method, renamed 'solve.tiebreak' avoid confusion generic solve()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"","code":"solveTiebreak(method, prefs, icans, ordered.ranking = NULL, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"method undocumented prefs undocumented icans undocumented ordered.ranking undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":null,"dir":"Reference","previous_headings":"","what":"Count preferential ballots using an STV method — stv","title":"Count preferential ballots using an STV method — stv","text":"Count preferential ballots using STV method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count preferential ballots using an STV method — stv","text":"","code":"stv(   votes,   nseats = NULL,   eps = 0.001,   equal.ranking = FALSE,   fsep = \"\\t\",   ties = c(\"f\", \"b\"),   constant.quota = FALSE,   quota.hare = FALSE,   group.nseats = NULL,   group.members = NULL,   complete.ranking = FALSE,   invalid.partial = FALSE,   verbose = FALSE,   seed = NULL,   quiet = FALSE,   digits = 3,   safety = 1,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count preferential ballots using an STV method — stv","text":"votes array one column per candidate one row per ballot nseats number seats filled election eps fuzz-factor comparing fractional votes equal.ranking TRUE ballots allowed rank candidates equally fsep column-separator output ties vector tie-breaking methods: 'f' forward, 'b' backward constant.quota TRUE quota held constant.  -rides quota.hare. quota.hare TRUE Hare quota, FALSE Droop quota group.nseats number seats reserved members group, Church England's STV methodology. group.members vector members group reserved seats complete.ranking TRUE balloting intended produce ranking candidates.  affects value assigned nseats stv() called nseats=NULL invalid.partial TRUE ballots invalid (aka \"informal\") specify complete ranking candidates verbose TRUE diagnostic output seed integer seed tie-breaking.  Warning: non-null, PRNG R reseeded prior every tie-break, making advisable use independent PRNG stream randomised experimentation stv(). quiet TRUE suppress console output digits number significant digits output table safety number standard deviations vote-counts, producing safeRank clustering near-ties complete ranking ... undocumented intent","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count preferential ballots using an STV method — stv","text":"object class vote.stv","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count preferential ballots using an STV method — stv","text":"","code":"data(food_election) stv(food_election, complete.ranking=TRUE, safety=0.5) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          5 #>  #> Fuzz on safeRank:\t 2.236068 #> Complete ranking: #>  #> | Rank|Margin    |  Candidate   | Elected|SafeRank | #> |----:|:---------|:------------:|-------:|:--------| #> |    1|8.0000000 |  Chocolate   |       x|1        | #> |    2|2.7771111 | Strawberries |       x|2        | #> |    3|0.1114444 |   Oranges    |       x|3        | #> |    4|1.8885556 |    Sweets    |       x|3        | #> |    5|NA        |    Pears     |       x|3        | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|            2| 3-trans|       3| 4-trans|      4| 5-trans|     5| #> |:------------|---------:|-------:|------------:|-------:|-------:|-------:|------:|-------:|-----:| #> |Oranges      |     4.000|   0.000|        4.000|   0.000|   4.000|  -1.527|       |        |      | #> |Pears        |     2.000|   0.000|        2.000|   0.000|   2.000|   0.000|  2.000|   0.000| 2.000| #> |Chocolate    |    12.000|  -8.666|             |        |        |        |       |        |      | #> |Strawberries |     1.000|   5.777|        6.777|  -3.443|        |        |       |        |      | #> |Sweets       |     1.000|   2.889|        3.889|   0.000|   3.889|   0.000|  3.889|  -1.925|      | #> |Tie-breaks   |          |        |             |        |        |        |       |        |      | #> |Elected      | Chocolate|        | Strawberries|        | Oranges|        | Sweets|        | Pears| #> |Eliminated   |          |        |             |        |        |        |       |        |      | #>  #> Elected: Chocolate, Strawberries, Oranges, Sweets, Pears  #>  stv(food_election, nseats = NULL, eps = 0.001,   equal.ranking = FALSE, fsep = \"\\t\", ties = c(\"f\", \"b\"),   constant.quota = FALSE, quota.hare = FALSE,   group.nseats = NULL, group.members = NULL,   complete.ranking = FALSE, invalid.partial = FALSE,   verbose = FALSE, seed = 1234, quiet = FALSE, digits = 3) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          2 #>  #> Fuzz on safeRank:\t 4.472136 #> Complete ranking: #>  #> | Rank|Margin    |  Candidate   | Elected|SafeRank | #> |----:|:---------|:------------:|-------:|:--------| #> |    1|8.0000000 |  Chocolate   |       x|1        | #> |    2|0.5548889 | Strawberries |       x|2        | #> |    3|1.2225556 |   Oranges    |        |2        | #> |    4|0.7774444 |    Sweets    |        |2        | #> |    5|NA        |    Pears     |        |2        | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|            2| #> |:------------|---------:|-------:|------------:| #> |Oranges      |     4.000|   0.000|        4.000| #> |Pears        |     2.000|   0.000|        2.000| #> |Chocolate    |    12.000|  -5.332|             | #> |Strawberries |     1.000|   3.555|        4.555| #> |Sweets       |     1.000|   1.777|        2.777| #> |Tie-breaks   |          |        |             | #> |Elected      | Chocolate|        | Strawberries| #> |Eliminated   |          |        |             | #>  #> Elected: Chocolate, Strawberries  #>"},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method, — sumOfVotes","title":"undocumented internal method, — sumOfVotes","text":"Renamed 'sum.votes' avoid confusion generic sum()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method, — sumOfVotes","text":"","code":"sumOfVotes(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method, — sumOfVotes","text":"votes undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method, — sumOfVotes","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for approval results — summary.SafeVote.approval","title":"summary method for approval results — summary.SafeVote.approval","text":"summary method approval results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for approval results — summary.SafeVote.approval","text":"","code":"# S3 method for SafeVote.approval summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for approval results — summary.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for approval results — summary.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for condorcet() results — summary.SafeVote.condorcet","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"Summary method condorcet() results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"object type SafeVote.condorcet ... undocumented, currently unused","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"[data.frame] object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for plurality object — summary.SafeVote.plurality","title":"summary method for plurality object — summary.SafeVote.plurality","text":"summary method plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for plurality object — summary.SafeVote.plurality","text":"","code":"# S3 method for SafeVote.plurality summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for plurality object — summary.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for plurality object — summary.SafeVote.plurality","text":"descriptive dataframe","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for score object — summary.SafeVote.score","title":"summary method for score object — summary.SafeVote.score","text":"summary method score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for score object — summary.SafeVote.score","text":"","code":"# S3 method for SafeVote.score summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for score object — summary.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for score object — summary.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"summary() method for a SafeVote result — summary.SafeVote.stv","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"summary() method SafeVote result","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv summary(object, ..., digits = 3)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"object undocumented ... undocumented digits undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the sensitivity of a result to tactical voting. — testAdditions","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"Ballots added specified number simulated elections (`arep`) held   tactic \"plumping\" used stuffing ballot box, `favoured` candidate specified.  Alternatively, `tacticalBallot` may specified.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"testAdditions(   votes,   ainc = 1,   arep = NULL,   favoured = NULL,   tacticalBallot = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = NULL,   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"votes set ballots ainc Number ballots added step arep Maximum number ballot-stuffed elections run favoured Name candidate \"plumped\".  NULL, random candidate selected among candidates initially top-ranked. candidates fully-ranked random, identical ballot paper stuffed multiple times.  integer value 'favoured' interpreted index candidate names. tacticalBallot ballot paper .e. vector length ncol(ballots). argument non-null, takes precedence 'favoured' ballot box stuffed. rankMethod Name ranking attribute output countMethod countMethod name function count ballots countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\" quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"matrix experimental results, dimension n 2m+1, n   number elections m number candidates.  first   column named \"nBallots\".  columns indicate ranking   eponymous candidate, margin next-lower-ranked candidate.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"data(food_election) testAdditions(food_election, countArgs=list(complete.ranking=TRUE)) #>  #> Adding up to 1 stv ballots = ( 3 5 4 1 2 ) #> Testing progress:  1 #> Experimental results: #> $nBallots #> LOI0 LOI1  #>   20   21  #>  #> $ranks #>      Oranges Pears Chocolate Strawberries Sweets #> LOI0       2     2         1            2      2 #> LOI1       2     2         1            2      2 #>  #> $margins #>        Oranges Pears Chocolate Strawberries    Sweets #> LOI0 0.1114444    NA         8     2.777111 1.8885556 #> LOI1 2.2211473    NA         8     3.666000 0.3763342 #>  #> $countMethod #> [1] \"stv\" #>  #> $rankMethod #> [1] \"safeRank\" #>  #> $datasetName #> [1] \"food_election\" #>  #> $experimentalMethod #> [1] \"testAdditions\" #>  #> $otherFactors #> $otherFactors$ainc #> [1] 1 #>  #> $otherFactors$arep #> [1] 1 #>  #> $otherFactors$countArgs #> $otherFactors$countArgs$complete.ranking #> [1] TRUE #>  #>  #> $otherFactors$tacticalBallot #>      Oranges        Pears    Chocolate Strawberries       Sweets  #>            3            5            4            1            2  #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\" testAdditions(food_election, tacticalBallot=c(1,2,3,4,5), arep=2) #>  #> Adding up to 2 stv ballots = ( 1 2 3 4 5 ) #> Testing progress:  1, 2 #> Experimental results: #> $nBallots #> DUH0 DUH1 DUH2  #>   20   21   22  #>  #> $ranks #>      Oranges Pears Chocolate Strawberries Sweets #> DUH0       2     2         1            2      2 #> DUH1       2     2         1            2      2 #> DUH2       2     2         1            2      2 #>  #> $margins #>        Oranges Pears Chocolate Strawberries Sweets #> DUH0        NA    NA         8    0.5548889     NA #> DUH1 0.6673333    NA         7           NA     NA #> DUH2 1.8895556    NA         6           NA     NA #>  #> $countMethod #> [1] \"stv\" #>  #> $rankMethod #> [1] \"safeRank\" #>  #> $datasetName #> [1] \"food_election\" #>  #> $experimentalMethod #> [1] \"testAdditions\" #>  #> $otherFactors #> $otherFactors$ainc #> [1] 1 #>  #> $otherFactors$arep #> [1] 2 #>  #> $otherFactors$countArgs #> NULL #>  #> $otherFactors$tacticalBallot #>      Oranges        Pears    Chocolate Strawberries       Sweets  #>            1            2            3            4            5  #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the safety of a preliminary result for an election — testDeletions","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"Ballots deleted random ballot-box, election results computed per 'dinc' ballot-deletions.  experiment terminates specified number ballots deleted, specified number ballot-counts occurred.  Note: ballot-counts correlated.  Use testFraction() experiment independently-drawn samples ballot-box.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"testDeletions(   votes = \"food_election\",   countMethod = \"condorcet\",   countArgs = NULL,   dlimit = NULL,   dstart = NULL,   dinc = NULL,   drep = NULL,   rankMethod = \"safeRank\",   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"votes set ballots countMethod name function count ballots countArgs List args passed countMethod (addition votes) dlimit Maximum number ballots delete dstart Number ballots deleted initial ballot-count dinc Number ballots deleted subsequent steps drep Maximum number elections (required dinc=0) rankMethod Name ranking attribute output countMethod exptName stem-name experimental units e.g. \"E\" quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"SafeRankExpt object, describing experiment results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"data(food_election) testDeletions(food_election) #> Number of ballots counted by condorcet : #>  20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Experimental results: #> $nBallots #> PLC0 PLC1 PLC2 PLC3 PLC4 PLC5 PLC6 PLC7 PLC8 PLC9  #>   20   18   16   14   12   10    8    6    4    2  #>  #> $ranks #>      Oranges Pears Chocolate Strawberries Sweets #> PLC0       2     2         1            2      2 #> PLC1       2     4         1            2      4 #> PLC2       2     2         1            2      2 #> PLC3       2     4         1            2      4 #> PLC4       2     4         1            2      4 #> PLC5       1     1         1            1      1 #> PLC6       1     1         1            1      1 #> PLC7       1     1         1            1      1 #> PLC8       1     1         3            3      3 #> PLC9       1     2         3            3      3 #>  #> $margins #>      Oranges Pears Chocolate Strawberries Sweets #> PLC0       6    NA        20            6      8 #> PLC1      10    NA        19            3      4 #> PLC2       6    NA        18            4      4 #> PLC3       9    NA        18            9      1 #> PLC4       3     2        10            7     NA #> PLC5       6     5         2            4     NA #> PLC6       5     5         2            1     NA #> PLC7       2     2         2            3     NA #> PLC8       2     4         1           NA      3 #> PLC9       3     4        NA           NA     NA #>  #> $countMethod #> [1] \"condorcet\" #>  #> $rankMethod #> [1] \"safeRank\" #>  #> $datasetName #> [1] \"food_election\" #>  #> $experimentalMethod #> [1] \"testDeletions\" #>  #> $otherFactors #> $otherFactors$dlimit #> [1] 18 #>  #> $otherFactors$dstart #> [1] 0 #>  #> $otherFactors$dinc #> [1] 2 #>  #> $otherFactors$drep #> [1] 10 #>  #> $otherFactors$countArgs #> NULL #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\" testDeletions(food_election, countMethod=\"stv\",   countArgs=list(complete.ranking=TRUE)) #> Number of ballots counted by stv : #>  20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Experimental results: #> $nBallots #> NHQ0 NHQ1 NHQ2 NHQ3 NHQ4 NHQ5 NHQ6 NHQ7 NHQ8 NHQ9  #>   20   18   16   14   12   10    8    6    4    2  #>  #> $ranks #>      Oranges Pears Chocolate Strawberries Sweets #> NHQ0       2     2         1            2      2 #> NHQ1       2     2         1            2      2 #> NHQ2       2     2         1            2      2 #> NHQ3       1     1         1            1      1 #> NHQ4       1     1         1            1      1 #> NHQ5       1     1         1            1      1 #> NHQ6       1     1         1            1      1 #> NHQ7       1     1         1            1      1 #> NHQ8       1     1         1            1      1 #> NHQ9       1     2         2            2      2 #>  #> $margins #>         Oranges Pears Chocolate Strawberries    Sweets #> NHQ0 0.11144444    NA         8    2.7771111 1.8885556 #> NHQ1 0.09127273    NA         7    1.0902727 1.9087273 #> NHQ2 0.88922222    NA         5    0.2215556 1.1107778 #> NHQ3 1.00042857    NA         3    0.6660952 0.3334762 #> NHQ4 1.33400000    NA         2    0.3330000 1.3330000 #> NHQ5 0.00000000    NA         3    0.3995000 0.6997500 #> NHQ6 0.00000000 0.000         2    0.9990000        NA #> NHQ7 0.00000000 0.000         1    0.1990000        NA #> NHQ8 1.00000000 0.401         0    0.5990000        NA #> NHQ9 2.00000000 0.000         0    0.0000000        NA #>  #> $countMethod #> [1] \"stv\" #>  #> $rankMethod #> [1] \"safeRank\" #>  #> $datasetName #> [1] \"food_election\" #>  #> $experimentalMethod #> [1] \"testDeletions\" #>  #> $otherFactors #> $otherFactors$dlimit #> [1] 18 #>  #> $otherFactors$dstart #> [1] 0 #>  #> $otherFactors$dinc #> [1] 2 #>  #> $otherFactors$drep #> [1] 10 #>  #> $otherFactors$countArgs #> $otherFactors$countArgs$complete.ranking #> [1] TRUE #>  #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","title":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","text":"Starting number ('astart') randomly-selected ballots, increasingly larger number randomly-selected ballots counted. ballots chosen independently experiment. rankings margins produced simulated election returned matrix one row per election.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","text":"","code":"testFraction(   votes,   astart = NULL,   ainc = NULL,   arep = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = NULL,   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","text":"votes set ballots astart Starting number ballots (min 2) ainc Number ballots added step arep Limit number repetitions test. Required non-null ainc==0. rankMethod Name ranking attribute output countMethod, e.g. \"elected\", \"ranking\", \"safeRank\". countMethod name function count ballots, e.g. \"stv\", \"condorcet\". countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\" quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","text":"matrix experimental results, dimension n 2m+1, n   number elections m number candidates.  first   column named \"nBallots\".  columns indicate ranking margin   candidate election.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapping experiment, with fractional counts of ballots. — testFraction","text":"","code":"data(food_election) testFraction(food_election, countMethod=\"condorcet\",              countArgs=list(safety=0.5,complete.ranking=TRUE)) #> Fraction of condorcet ballots: #>  20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100% #> Experimental results: #> $nBallots #> BEW1 BEW2 BEW3 BEW4 BEW5 BEW6 BEW7 BEW8 BEW9  #>    4    6    8   10   12   14   16   18   20  #>  #> $ranks #>      Oranges Pears Chocolate Strawberries Sweets #> BEW1       3     4         2            1      4 #> BEW2       2     5         1            2      4 #> BEW3       1     1         1            1      1 #> BEW4       2     2         1            2      2 #> BEW5       4     4         1            2      3 #> BEW6       3     5         1            2      3 #> BEW7       2     5         1            2      2 #> BEW8       3     4         1            2      4 #> BEW9       3     5         1            2      4 #>  #> $margins #>      Oranges Pears Chocolate Strawberries Sweets #> BEW1       4    NA         4            2     NA #> BEW2       5    NA         7            1      3 #> BEW3       2     1         2           NA      2 #> BEW4       1    NA        16            1      2 #> BEW5       3    NA        18            5      6 #> BEW6       2    NA        13            4      9 #> BEW7       3    NA        17            3     12 #> BEW8      12    NA        12            6      2 #> BEW9       6    NA        20            6      8 #>  #> $countMethod #> [1] \"condorcet\" #>  #> $rankMethod #> [1] \"safeRank\" #>  #> $datasetName #> [1] \"food_election\" #>  #> $experimentalMethod #> [1] \"testFraction\" #>  #> $otherFactors #> $otherFactors$astart #> [1] 2 #>  #> $otherFactors$ainc #> [1] 2 #>  #> $otherFactors$arep #> [1] 9 #>  #> $otherFactors$countArgs #> $otherFactors$countArgs$safety #> [1] 0.5 #>  #> $otherFactors$countArgs$complete.ranking #> [1] TRUE #>  #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\" testFraction(dublin_west, astart=20, ainc=20, arep=2, countMethod=\"stv\",              rankMethod=\"elected\", quiet=FALSE) #> Fraction of stv ballots: #>  0.1%, 0.2% #> Experimental results: #> $nBallots #> VKJ1 VKJ2  #>   40   60  #>  #> $ranks #>      Bonnie Burton Ryan Higgins Lenihan McDonald Morrissey Smyth Terry #> VKJ1      1      2    2       2       2        1         1     1     1 #> VKJ2      1      2    2       2       2        1         1     1     1 #>  #> $margins #>      Bonnie   Burton      Ryan  Higgins Lenihan McDonald Morrissey Smyth Terry #> VKJ1     NA 1.817909 0.5452727 1.182091       4       NA        NA    NA    NA #> VKJ2     NA 1.236695 1.8617213 4.399950       8       NA        NA    NA    NA #>  #> $countMethod #> [1] \"stv\" #>  #> $rankMethod #> [1] \"elected\" #>  #> $datasetName #> [1] \"dublin_west\" #>  #> $experimentalMethod #> [1] \"testFraction\" #>  #> $otherFactors #> $otherFactors$astart #> [1] 20 #>  #> $otherFactors$ainc #> [1] 20 #>  #> $otherFactors$arep #> [1] 2 #>  #> $otherFactors$countArgs #> NULL #>  #>  #> attr(,\"class\") #> [1] \"SafeRankExpt\""},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method from original code — translate.ties","title":"Undocumented internal method from original code — translate.ties","text":"Undocumented internal method original code","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method from original code — translate.ties","text":"","code":"translate.ties(ties, method)"},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method from original code — translate.ties","text":"ties undocumented method 'f' forward, 'b' backward","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method from original code — translate.ties","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for approval object — view.SafeVote.approval","title":"view method for approval object — view.SafeVote.approval","text":"view method approval object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for approval object — view.SafeVote.approval","text":"","code":"view.SafeVote.approval(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for approval object — view.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for approval object — view.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for SafeVote.condorcet — view.SafeVote.condorcet","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view method SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"","code":"view.SafeVote.condorcet(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"object type SafeVote.condorcet ... see [view.SafeVote.approval]","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for plurality object — view.SafeVote.plurality","title":"view method for plurality object — view.SafeVote.plurality","text":"view method plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for plurality object — view.SafeVote.plurality","text":"","code":"view.SafeVote.plurality(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for plurality object — view.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for plurality object — view.SafeVote.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for score object — view.SafeVote.score","title":"view method for score object — view.SafeVote.score","text":"view method score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for score object — view.SafeVote.score","text":"","code":"view.SafeVote.score(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for score object — view.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for score object — view.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"view() method for the result of an stv() ballot-count — view.SafeVote.stv","title":"view() method for the result of an stv() ballot-count — view.SafeVote.stv","text":"view() method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view() method for the result of an stv() ballot-count — view.SafeVote.stv","text":"","code":"view.SafeVote.stv(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view() method for the result of an stv() ballot-count — view.SafeVote.stv","text":"object undocumented ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view() method for the result of an stv() ballot-count — view.SafeVote.stv","text":"formatted object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a winner and their margin of victory — winnerMargin","title":"Find a winner and their margin of victory — winnerMargin","text":"Find winner margin victory","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a winner and their margin of victory — winnerMargin","text":"","code":"winnerMargin(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a winner and their margin of victory — winnerMargin","text":"votes cleaned ballots","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a winner and their margin of victory — winnerMargin","text":"length-2 vector: index winning candidate, margin         victory (0 tie, NA losers)","code":""}]
