[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clark Thomborson. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clark Thomborson (2023). SafeVote: Election Vote Counting Safety Features. R package version 1.0.0, https://cthombor.github.io/SafeVote/.","code":"@Manual{,   title = {SafeVote: Election Vote Counting with Safety Features},   author = {{Clark Thomborson}},   year = {2023},   note = {R package version 1.0.0},   url = {https://cthombor.github.io/SafeVote/}, }"},{"path":"/index.html","id":"safevote","dir":"","previous_headings":"","what":"Election Vote Counting with Safety Features","title":"Election Vote Counting with Safety Features","text":"goals SafeVote investigate safety announcing preliminary results election, allow experimental study safety complete ranking candidates (party list) derived small-scale election preferential ballots.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Election Vote Counting with Safety Features","text":"can install development version SafeVote GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cthombor/SafeVote\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Election Vote Counting with Safety Features","text":"mod vote.2.3-2 reports margins victory election. value safety parameter affect completeness safeRank ordering candidates. Setting safety = 0 cause safeRank total ranking candidates, except rare case exact tie. “fuzz” z vote-differentials safeRank clustering candidates $z = s\\sqrt{n}$, s value safety parameter n number ballots. Three safety-testing routines supplied, support experimental study stochastic behaviour ballot counting methods. testFraction draws series independent samples ballot box. Stochastic experimentation method , hope, help future researchers develop advice, election officials, whether preliminary count sufficiently stable make preliminary announcement result – without undue risk retract announcement (Hastings NZ October 2022). seen , case yale_ballots dataset, 400 479 votes sufficient establish candidates ATL_19, ATL_10, ATL_2 likely three four winners. balloting extremely close fourth seat. ATL_54 eventual winner; ATL_54 ATL_27 ranked approximately 5= last 50 ballots counted. STV variant used experiment fractional vote-transfers Hare quota.  testFraction may also useful determining extent safety preliminary results STV election affected quota method. case 2016 Yale Senate election, use Droop quota, rather Hare quota, significant influence partial results fourth seat. influence readily explained fact multiple rounds elimination required candidate achieved quota. Fewer rounds elimination required reach Droop quota, fewer votes transferred seat filled – differentially affect vote-counts candidates still play remaining seats. Furthermore, Cambridge method transferring votes may employed. rules, initial numbering ballots determines ballot papers consulted candidate’s surplus votes transfered. noted tests STV v1.0.2, ballots selected vote-transfer process pseudorandom number generator, seeding generator affects outcome election. per-candidate boxplots last decile vote-counting experimental results (using Droop quota fractional vote transfers) illustrate phenomenon. median result last decile ballot-counting show ATL_2 small margin victory third seat, ATL_54 slight advantage ATL_27 close race fourth seat.  testAdditions can used assess sensitivity STV election tactical-voting strategy “plumping” favoured candidate. example, find takes two “plumping” ballots shift “Strawberries” third place second place food_election dataset. Note test set safety parameter stv ballot-counting method zero, output testAdditions reveals complete ranking candidates unless exact tie. testDeletions deletes ballots sequentially ballot box, counting deletion. results plotted inverse order collection (.e. increasing order number ballots n) see one possible evolution preliminary results election ballots counted randomised order (without replacement) ballot box. Note plot results testFraction similar appearance, however ballot boxes counted testFraction independently sampled (“bootstrapped”) full dataset ballots.  plots , “adjusted rank” candidate ranking r plus scaled margin victory. Following usual convention, -popular candidate rank 1. Accordingly, invert y-axis rank-1 candidate visually dominant. default scaling margin victory m $e^{-cm/\\sqrt{n}}$. exponential scaling makes possible see small differences vote-counts small margins victory affect safety election result. Note small margin victory adds almost whole unit candidate’s rank. introduce scaling factor $c/\\sqrt{n}$ exponent rough-cut estimate standard deviation standard deviation victory margin election n ballots. candidate whose margin victory multiple $\\sqrt{n}$ thus small adjustment rank plots. margin-scaling parameter c default value 1, may adjusted using parameter cMargin plot.SafeVote. sample testDeletions plot , Morrissey’s adjusted rank visually close McDonald’s adjusted rank ballots counted. suggests us relative standing election sensitive small variations voter behaviour. One primary motivations developing package possible future use ranking candidates party list Green Party Aotearoa New Zealand. date, found academic study methods ranking candidates using preferential-voting ballots, making quite possibly greenfield problem social-choice research. private communication November 2022, Prof. Nicolaus Tideman offered advice initial proposal ranking Condorcet score. However, diversity one explicit values party, ranking derived STV-style ballot-counting process seem much appropriate use NZ Greens ranking derived Condorcet scoring process. Indeed, NZ Greens currently using modification Meek’s STV algorithm, enshrined Schedule 1A Local Electoral Regulations 2001, form party list. current rules, NZ Greens rely delegated assembly form initial list. possible future NZ Greens dozens elected MPs, size assembly may increased sitting MPs seeking re-election safely ranked , candidates pool. wonder: n preferential ballots generally sufficient, real-world elections, safely rank-order $\\sqrt{n}$ candidates? package , hope, first step toward answering question.","code":"library(SafeVote)     stv(food_election,quiet=TRUE)$rankingTable #>   Rank    Margin    Candidate Elected SafeRank #> 1    1 8.0000000    Chocolate       x        1 #> 2    2 0.5548889 Strawberries       x        2 #> 3    3 1.2225556      Oranges                2 #> 4    4 0.7774444       Sweets                2 #> 5    5        NA        Pears                2     stv(food_election,quiet=TRUE,safety=0)$rankingTable #>   Rank    Margin    Candidate Elected SafeRank #> 1    1 8.0000000    Chocolate       x        1 #> 2    2 0.5548889 Strawberries       x        2 #> 3    3 1.2225556      Oranges                3 #> 4    4 0.7774444       Sweets                4 #> 5    5        NA        Pears                5 load(SaveVote) xrHare <-    testFraction(yale_ballots,arep=9,ainc=5,astart=400,                countArgs=list(nseats=4,safety=0.0,quota.hare=TRUE)) plot(xrHare,boxPlot=TRUE,boxPlotCutInterval=10,      line=FALSE,facetWrap=TRUE,nResults=6) load(SaveVote) xrDroop <-    testFraction(yale_ballots,arep=9,ainc=5,astart=400,                countArgs=list(nseats=4,safety=0.0,quota.hare=FALSE)) plot(xrDroop,boxPlot=TRUE,boxPlotCutInterval=10,      line=FALSE,facetWrap=TRUE,nResults=6) load(SaveVote) testAdditions(food_election, arep = 2, favoured = \"Strawberries\",    countArgs = list(safety = 0)) #>  #> Adding up to 2 stv ballots = ( 3 5 4 1 2 ) #> Testing progress:  1, 2 #>  #> Results of testAdditions at 2022-12-26 08:25:22 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | safety| #> |:---------|------:| #> |countArgs |      0| #>  #>  #> |             | ainc| arep|                                                         tacticalBallot| #> |:------------|----:|----:|----------------------------------------------------------------------:| #> |otherFactors |    1|    2| c(Oranges = 3, Pears = 5, Chocolate = 4, Strawberries = 1, Sweets = 2)| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|---------:| #> |SBK0   |       20|       2|     5|         1|            3|      4| 1.4451111|       2|           8|      1.7774444| 0.7774444| #> |SBK1   |       21|       2|     5|         1|            3|      4| 0.6673333|       2|           8|      2.6663333| 0.6663333| #> |SBK2   |       22|       3|     5|         1|            2|      4| 3.4447778|       2|           8|      0.1104444| 0.5552222| load(SaveVote) xr <-    testDeletions(dublin_west,dinc=25,dstart=29988,quiet=FALSE,                 countArgs=list(safety=0.0,nseats=3)) save(xr,file=\"../s0di25ns3.rdata\") plot(xr,title=\"testDeletions, file = s0di25ns3\")"},{"path":"/reference/SafeVote-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","title":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","text":"Fork `vote_2.3-2` [Raftery et al. (2021) doi:10.32614/RJ-2021-086 ], additional support stochastic experimentation.","code":""},{"path":[]},{"path":"/reference/SafeVote-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","text":"Maintainer: Clark Thomborson c.thomborson@auckland.ac.nz (ORCID)","code":""},{"path":"/reference/a3_hil.html","id":null,"dir":"Reference","previous_headings":"","what":"Tideman a3_hil — a3_hil","title":"Tideman a3_hil — a3_hil","text":"data one 87 sets ballots Tideman data collection, curated Center Range Voting. set ballots collected 1987 Nicolaus Tideman, support NSF grant SES86-18328. \"data records ballots elections British organizations (mostly trade unions using PR-STV IRV voting) voters ranked candidates. data gathered stipulation organizations involved remain anonymous.\" ballots encoded David Hill's format, converted preference-vector format package.  file A4.HIL contains eight blank ballot papers (1, 616, 619, 620, 685, 686, 687, 688) retained. set may counted stv(a3_hil,nseats=attr(a3_hil,\"nseats\")).","code":""},{"path":"/reference/a3_hil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tideman a3_hil — a3_hil","text":"","code":"data(a3_hil)"},{"path":"/reference/a3_hil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tideman a3_hil — a3_hil","text":"data frame attribute \"nseats\" = 7, consisting 989 observations 15 candidates.","code":""},{"path":"/reference/a4_hil.html","id":null,"dir":"Reference","previous_headings":"","what":"Tideman a4_hil — a4_hil","title":"Tideman a4_hil — a4_hil","text":"data one 87 sets ballots Tideman data collection, curated Center Range Voting. set ballots collected 1987 Nicolaus Tideman, support NSF grant SES86-18328. \"data records ballots elections British organizations (mostly trade unions using PR-STV IRV voting) voters ranked candidates. data gathered stipulation organizations involved remain anonymous.\" ballots encoded David Hill's format, converted preference-vector format package.","code":""},{"path":"/reference/a4_hil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tideman a4_hil — a4_hil","text":"","code":"data(a4_hil)"},{"path":"/reference/a4_hil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tideman a4_hil — a4_hil","text":"data frame attribute \"nseats\" = 2, consisting 43 observations 14 candidates.","code":""},{"path":"/reference/a53_hil.html","id":null,"dir":"Reference","previous_headings":"","what":"Tideman a53_hil — a53_hil","title":"Tideman a53_hil — a53_hil","text":"data one 87 sets ballots Tideman data collection, curated Center Range Voting. set ballots collected 1988 Nicolaus Tideman, support NSF grant SES86-18328. \"data records ballots elections British organizations (mostly trade unions using PR-STV IRV voting) voters ranked candidates. data gathered stipulation organizations involved remain anonymous.\" ballots encoded David Hill's format, converted preference-vector format package.  Candidates renamed letters alphabet, ease comparison Table 3 Tideman, \"Better voting methods technology: refinement-manageability trade-single transferable vote\", Public Choice 103: 13-34, 2000, DOI: 10.1023/:1005082925477. noted table, close race candidates D, F, B final rounds Meek count a53_hil. Tideman's implementation Meek's method excludes B (59.02 votes), elects D final round (88.33 votes) margin 0.95 votes ahead F (87.38 votes). v1.0, stv(a53.hil,quota.hare=TRUE) excludes F (56.418 votes), elects D final round (79.705 votes) winning margin 0.747 votes ahead B (78.958 votes). result election vote counts winning margins differ significantly; conclude stv(quota.hare=TRUE) SafeVote v1.0 reliable proxy Tideman's implementation Meek's algorithm. Future researchers may wish adjust quota calculation vote.stv() longer biased upward \"fuzz\" 0.001, see change significantly reduces discrepancies Tideman's implementation Meek. noted (Wichmann, 2000), \"... exact coomparison two implementations Meek expected due differences specification due breaking ties.\" June 2020, postgraduate student Edinburgh presented slideshow describing progress toward formal specification Meek's algorithm. specification, complete, support proofs important properties -- convergence -- allow implementation formally verified correctness.","code":""},{"path":"/reference/a53_hil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tideman a53_hil — a53_hil","text":"","code":"data(a53_hil)"},{"path":"/reference/a53_hil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tideman a53_hil — a53_hil","text":"data frame attribute \"nseats\" = 4, consisting 460 observations 10 candidates.","code":""},{"path":"/reference/approval.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the approval method — approval","title":"Count votes using the approval method — approval","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"/reference/approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the approval method — approval","text":"","code":"approval(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"/reference/approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the approval method — approval","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"/reference/approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the approval method — approval","text":"undocumented","code":""},{"path":"/reference/as.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"as.SafeRankExpt() — as.SafeRankExpt","title":"as.SafeRankExpt() — as.SafeRankExpt","text":".SafeRankExpt()","code":""},{"path":"/reference/as.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"","code":"as.SafeRankExpt(df)"},{"path":"/reference/as.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"df data.frame object","code":""},{"path":"/reference/as.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"SafeRankExpt object, stop() df fails sanity checks","code":""},{"path":"/reference/assemble.args.for.check.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.score","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented internal method","code":""},{"path":"/reference/assemble.args.for.check.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.score","text":"","code":"assemble.args.for.check.score(x, max.score = NULL, ...)"},{"path":"/reference/assemble.args.for.check.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.score","text":"x, max.score, ... undocumented","code":""},{"path":"/reference/assemble.args.for.check.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented","code":""},{"path":"/reference/assemble.args.for.check.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.stv","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented internal method","code":""},{"path":"/reference/assemble.args.for.check.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.stv","text":"","code":"assemble.args.for.check.stv(x, equal.ranking = FALSE, ...)"},{"path":"/reference/assemble.args.for.check.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.stv","text":"x, equal.ranking, ... undocumented","code":""},{"path":"/reference/assemble.args.for.check.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented","code":""},{"path":"/reference/backwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — backwards.tiebreak","title":"Undocumented internal method — backwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"/reference/backwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — backwards.tiebreak","text":"","code":"backwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"/reference/backwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — backwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"/reference/check.nseats.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter-checking method for nseats (internal) — check.nseats","title":"parameter-checking method for nseats (internal) — check.nseats","text":"parameter-checking method nseats (internal)","code":""},{"path":"/reference/check.nseats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter-checking method for nseats (internal) — check.nseats","text":"","code":"check.nseats(   nseats = NULL,   ncandidates,   default = 1,   mcan = NULL,   complete.ranking = FALSE )"},{"path":"/reference/check.nseats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parameter-checking method for nseats (internal) — check.nseats","text":"nseats initially-specified number seats filled election ncandidates number candidates standing election default return value function nseats=NULL mcan deprecated name nseats complete.ranking TRUE, return value 1..ncandidates FALSE, return value 1..ncandidates-1 (backwards compatibility)","code":""},{"path":"/reference/check.nseats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parameter-checking method for nseats (internal) — check.nseats","text":"valid non-NULL value number seats filled","code":""},{"path":"/reference/check.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"check the validity of a partial ranking — check.ranking","title":"check the validity of a partial ranking — check.ranking","text":"check validity partial ranking","code":""},{"path":"/reference/check.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the validity of a partial ranking — check.ranking","text":"","code":"check.ranking(r)"},{"path":"/reference/check.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check the validity of a partial ranking — check.ranking","text":"r numeric vector","code":""},{"path":"/reference/check.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check the validity of a partial ranking — check.ranking","text":"partial ranking elements r, using ties.method=\"min\"","code":""},{"path":"/reference/check.votes.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.approval","title":"undocumented internal method — check.votes.approval","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.approval","text":"","code":"check.votes.approval(record, ...)"},{"path":"/reference/check.votes.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.approval","text":"record, ... undocumented","code":""},{"path":"/reference/check.votes.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.approval","text":"undocumented","code":""},{"path":"/reference/check.votes.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.condorcet","title":"undocumented internal method — check.votes.condorcet","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.condorcet","text":"","code":"check.votes.condorcet(record, ...)"},{"path":"/reference/check.votes.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.condorcet","text":"record, ... undocumented","code":""},{"path":"/reference/check.votes.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.condorcet","text":"undocumented","code":""},{"path":"/reference/check.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes","title":"undocumented internal method — check.votes","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes","text":"","code":"check.votes(x, ..., quiet = FALSE)"},{"path":"/reference/check.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes","text":"x, quiet, ... undocumented","code":""},{"path":"/reference/check.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes","text":"undocumented","code":""},{"path":"/reference/check.votes.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.plurality","title":"undocumented internal method — check.votes.plurality","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.plurality","text":"","code":"check.votes.plurality(record, ...)"},{"path":"/reference/check.votes.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.plurality","text":"record, ... undocumented","code":""},{"path":"/reference/check.votes.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.plurality","text":"undocumented","code":""},{"path":"/reference/check.votes.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.score","title":"undocumented internal method — check.votes.score","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.score","text":"","code":"check.votes.score(record, max.score, ...)"},{"path":"/reference/check.votes.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.score","text":"record, max.score, ... undocumented","code":""},{"path":"/reference/check.votes.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.score","text":"undocumented","code":""},{"path":"/reference/check.votes.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.stv","title":"undocumented internal method — check.votes.stv","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.stv","text":"","code":"check.votes.stv(record, equal.ranking = FALSE, ...)"},{"path":"/reference/check.votes.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.stv","text":"record, equal.ranking, ... undocumented","code":""},{"path":"/reference/check.votes.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.stv","text":"undocumented","code":""},{"path":"/reference/check.votes.tworound.runoff.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.tworound.runoff","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented internal method","code":""},{"path":"/reference/check.votes.tworound.runoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.tworound.runoff","text":"","code":"check.votes.tworound.runoff(record, ...)"},{"path":"/reference/check.votes.tworound.runoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.tworound.runoff","text":"record, ... undocumented","code":""},{"path":"/reference/check.votes.tworound.runoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented","code":""},{"path":"/reference/combineRankings.html","id":null,"dir":"Reference","previous_headings":"","what":"the least upper bound on a pair of rankings — combineRankings","title":"the least upper bound on a pair of rankings — combineRankings","text":"least upper bound pair rankings","code":""},{"path":"/reference/combineRankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings(r1, r2)"},{"path":"/reference/combineRankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the least upper bound on a pair of rankings — combineRankings","text":"r1, r2 numeric vectors","code":""},{"path":"/reference/combineRankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the least upper bound on a pair of rankings — combineRankings","text":"complete (possibly partial) ranking consistent r1 r2.  Uses ties.method=\"min\"","code":""},{"path":"/reference/combineRankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings( c(3,1,2), c(2,1,3) ) #> [1] 2 1 2"},{"path":"/reference/completeRankingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"internal method to analyse the partial results of an stv() ballot count, to\ndiscover a complete ranking of all candidates.  The ranking may depend on the\nvalue of nseats, because this affects how votes are transferred. — completeRankingTable","title":"internal method to analyse the partial results of an stv() ballot count, to\ndiscover a complete ranking of all candidates.  The ranking may depend on the\nvalue of nseats, because this affects how votes are transferred. — completeRankingTable","text":"internal method analyse partial results stv() ballot count, discover complete ranking candidates.  ranking may depend value nseats, affects votes transferred.","code":""},{"path":"/reference/completeRankingTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal method to analyse the partial results of an stv() ballot count, to\ndiscover a complete ranking of all candidates.  The ranking may depend on the\nvalue of nseats, because this affects how votes are transferred. — completeRankingTable","text":"","code":"completeRankingTable(object, quiet, verbose)"},{"path":"/reference/completeRankingTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal method to analyse the partial results of an stv() ballot count, to\ndiscover a complete ranking of all candidates.  The ranking may depend on the\nvalue of nseats, because this affects how votes are transferred. — completeRankingTable","text":"object partial results quiet TRUE suppress console output verbose TRUE produce diagnostic output","code":""},{"path":"/reference/completeRankingTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal method to analyse the partial results of an stv() ballot count, to\ndiscover a complete ranking of all candidates.  The ranking may depend on the\nvalue of nseats, because this affects how votes are transferred. — completeRankingTable","text":"data.frame columns TotalRank, Margin, Candidate, Elected, SafeRank","code":""},{"path":"/reference/condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the Condorcet voting method. — condorcet","title":"Count votes using the Condorcet voting method. — condorcet","text":"Condorcet method elects candidate wins majority ranked vote every head head election candidates. Condorcet winner candidate beats candidates pairwise comparisons. Analogously, Condorcet loser candidate loses candidates. Neither Condorcet winner loser might exist.","code":""},{"path":"/reference/condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"condorcet(   votes,   runoff = FALSE,   nseats = 1,   safety = 1,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"/reference/condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the Condorcet voting method. — condorcet","text":"votes matrix data.frame containing votes. Rows correspond votes, columns correspond candidates. votes character string, interpreted file name votes read. See . runoff Logical. TRUE Condorcet winner exists, election goes run-, see . nseats number seats filled election safety Parameter clustering heuristic total ranking candidates.  Conjecture: default 1.0 ensures separation one s.d. clusters, votes .u.d. permutations candidates. fsep votes file name, argument gives column separator file. quiet TRUE output printed. ... Undocumented intent (preserved legacy code)","code":""},{"path":"/reference/condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the Condorcet voting method. — condorcet","text":"Object class SafeVote.condorcet","code":""},{"path":"/reference/condorcet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count votes using the Condorcet voting method. — condorcet","text":"runoff argument set TRUE Condorcet winner exists, two candidates pairwise wins selected method applied subset. two candidates run-, selection performed repeatedly, either winner selected selection possible. input data votes structured way stv method: Row contains preferences voter numbered 1; 2; : : : ; r; 0; 0; 0; 0, order, equal preferences allowed. columns correspond candidates. dimnames columns names candidates; supplied candidates lettered , B, C, .... dataset contains missing values (NA), replaced zeros. ballot equally-ranked candidates, rankings tested validity: preference \\(\\) duplicate, exactly \\(- 1\\) preferences \\(j\\) \\(0 < j < \\). ballot x fails validity test, automatically corrected (aka \"converted\") valid ballot using x <- rank(x, ties.method = \"min\"), warning issued. method also computes Borda ranking candidates, using tournament-style scoring.  ranking \"fuzzed\" safeRank, approximately 1 s.d. fuzz safety=1.0 voter preferences .u.d.  warning thrown safeRank violates (extended) Condorcet principle: Candidate \\(\\) highly ranked Candidate \\(j\\) majority voters agree .","code":""},{"path":"/reference/condorcet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"{ data(food_election) condorcet(food_election) } #>  #> Results of Condorcet voting #> ===========================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          1 #>  #>  #> |             | Oranges| Pears| Chocolate| Strawberries| Sweets| Total| Score | BordaRank | margin| SafeRank| Winner| Loser| #> |:------------|-------:|-----:|---------:|------------:|------:|-----:|:-----:|:---------:|------:|--------:|------:|-----:| #> |Oranges      |       0|     1|         0|            0|      1|     2|  22   |     3     |      6|        2|       |      | #> |Pears        |       0|     0|         0|            0|      0|     0|   8   |     5     |      0|        2|       |     x| #> |Chocolate    |       1|     1|         0|            1|      1|     4|  48   |     1     |     20|        1|      x|      | #> |Strawberries |       1|     1|         0|            0|      1|     3|  28   |     2     |      6|        2|       |      | #> |Sweets       |       0|     1|         0|            0|      0|     1|  16   |     4     |      8|        2|       |      | #>  #> safeRank fuzz on Borda scores: 8.944272 #> Gaps in Borda scores: min 6 mean 9.6 max 20 ; all 6 6 8 8 20 #> Condorcet winner: Chocolate #> Condorcet loser: Pears #>"},{"path":"/reference/correct.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"Amend ballots with equal or incomplete preferences — correct.ranking","title":"Amend ballots with equal or incomplete preferences — correct.ranking","text":"correct.ranking function returns modified set ballots.  argument partial determines ballots partially set 0 (TRUE), complete re-ranking, allowed equal.ranking = TRUE. can used calling explicitly. called stv equal.ranking = TRUE invalid.partial = TRUE. also called within condorcet function default value (FALSE) partial, .e. interpreting 0 last= preference.","code":""},{"path":"/reference/correct.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amend ballots with equal or incomplete preferences — correct.ranking","text":"","code":"correct.ranking(votes, partial = FALSE, quiet = FALSE)"},{"path":"/reference/correct.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amend ballots with equal or incomplete preferences — correct.ranking","text":"votes original contents ballot box partial FALSE (default), ballot interpreted, possible, complete (necessarily total) ranking candidates.  TRUE, ballot contain 0 unranked candidates. quiet suppress diagnostics","code":""},{"path":"/reference/correct.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Amend ballots with equal or incomplete preferences — correct.ranking","text":"corrected ballots","code":""},{"path":"/reference/dot-print.summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":".print method for summary object — .print.summary.SafeVote","title":".print method for summary object — .print.summary.SafeVote","text":".print method summary object","code":""},{"path":"/reference/dot-print.summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".print method for summary object — .print.summary.SafeVote","text":"","code":".print.summary.SafeVote(x, ...)"},{"path":"/reference/dot-print.summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".print method for summary object — .print.summary.SafeVote","text":"x, ... undocumented","code":""},{"path":"/reference/dot-print.summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".print method for summary object — .print.summary.SafeVote","text":"undocumented","code":""},{"path":"/reference/dot-summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":"summarises vote-totals for subsequent printing — .summary.SafeVote","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"summarises vote-totals subsequent printing","code":""},{"path":"/reference/dot-summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"","code":".summary.SafeVote(object, larger.wins = TRUE, reorder = TRUE)"},{"path":"/reference/dot-summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"object vector total votes per candidate larger.wins TRUE candidates \"voted \" rather voted-reorder TRUE output data.frame columns rank-order","code":""},{"path":"/reference/dot-summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"data.frame three columns nc+1 rows, nc number candidates.  first column contains candidate names final entry named \"Sum\".  second column contains vote totals. third column vector chars indicate whether candidate elected.  data.frame four named attributes carrying election parameters. TODO: refactor modern dialect R, perhaps defining constructor election_info S3 object summary method print method","code":""},{"path":"/reference/dublin_west.html","id":null,"dir":"Reference","previous_headings":"","what":"Dublin West — dublin_west","title":"Dublin West — dublin_west","text":"Dataset containing ranked votes Dublin West constituency 2002, Ireland. Results STV election can viewed https://en.wikipedia.org/wiki/Dublin_West#2002_general_election.","code":""},{"path":"/reference/dublin_west.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dublin West — dublin_west","text":"","code":"data(dublin_west)"},{"path":"/reference/dublin_west.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dublin West — dublin_west","text":"data frame 29988 observations 9 candidates. record corresponds one ballot candidates ranked 1 9 zeros allowed.","code":""},{"path":"/reference/election.info.html","id":null,"dir":"Reference","previous_headings":"","what":"prints the basic results of an election — election.info","title":"prints the basic results of an election — election.info","text":"prints basic results election","code":""},{"path":"/reference/election.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prints the basic results of an election — election.info","text":"","code":"election.info(x)"},{"path":"/reference/election.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prints the basic results of an election — election.info","text":"x basic election results, named attributes R structure object","code":""},{"path":"/reference/election.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prints the basic results of an election — election.info","text":"data.frame : invisible copy printed results TODO: refactor modern dialect R, e.g. defining constructor election_info S3 object print method","code":""},{"path":"/reference/extractMargins.html","id":null,"dir":"Reference","previous_headings":"","what":"extract margins from the results of a ballot count — extractMargins","title":"extract margins from the results of a ballot count — extractMargins","text":"extract margins results ballot count","code":""},{"path":"/reference/extractMargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract margins from the results of a ballot count — extractMargins","text":"","code":"extractMargins(marginNames, crRanks, cr)"},{"path":"/reference/extractMargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract margins from the results of a ballot count — extractMargins","text":"marginNames list colnames margins SafeRank result crRanks ranks candidates, necessarily total cr structure returned ballot-counting method Margins adjusted tied candidates, candidates within tie group margins indicative relative strengths. Extremely small margins indicative floating-point roundoff errors.","code":""},{"path":"/reference/extractMargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract margins from the results of a ballot count — extractMargins","text":"named list margins","code":""},{"path":"/reference/extractRank.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a ranking vector by name from the results of a ballot count — extractRank","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"Extract ranking vector name results ballot count","code":""},{"path":"/reference/extractRank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"","code":"extractRank(rankMethod, cr)"},{"path":"/reference/extractRank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"rankMethod \"safeRank\", \"elected\", \"rank\" cr structure returned ballot-counting method","code":""},{"path":"/reference/extractRank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"numeric ranking vector, order colnames(cr$data)","code":""},{"path":"/reference/food_election.html","id":null,"dir":"Reference","previous_headings":"","what":"Food Election — food_election","title":"Food Election — food_election","text":"Sample data testing SafeVote","code":""},{"path":"/reference/food_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Food Election — food_election","text":"","code":"data(food_election)"},{"path":"/reference/food_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Food Election — food_election","text":"data frame 20 observations 5 candidates (Oranges, Pears, Chocolate, Strawberries, Sweets). record corresponds one ballot ranking candidates.","code":""},{"path":"/reference/forwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — forwards.tiebreak","title":"Undocumented internal method — forwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"/reference/forwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — forwards.tiebreak","text":"","code":"forwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"/reference/forwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — forwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"/reference/image.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"image function visualizes joint distribution two preferences (.pref=FALSE) given xpref ypref, well marginal distribution preferences (.pref=TRUE). joint distribution can shown proportions (proportion=TRUE) raw vote counts (proportion=FALSE).","code":""},{"path":"/reference/image.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet image(x, ...)"},{"path":"/reference/image.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"x object type SafeVote.condorcet ... See arguments image.SafeVote.stv, especially xpref, ypref, .pref proportion.","code":""},{"path":"/reference/image.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"image object, side-effect RStudio Plots pane","code":""},{"path":"/reference/image.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"visualisation of joint and marginal distributions in STV preferences — image.SafeVote.stv","title":"visualisation of joint and marginal distributions in STV preferences — image.SafeVote.stv","text":"visualisation joint marginal distributions STV preferences","code":""},{"path":"/reference/image.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"visualisation of joint and marginal distributions in STV preferences — image.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv image(x, xpref = 2, ypref = 1, all.pref = FALSE, proportion = TRUE, ...)"},{"path":"/reference/image.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"visualisation of joint and marginal distributions in STV preferences — image.SafeVote.stv","text":"x STV results visualised xpref, ypref candidates shown joint distribution plot .pref plot joint distribution two preferences (.pref=FALSE) marginal distribution preferences (.pref=TRUE). proportion joint distribution can shown either proportions (proportion=TRUE) raw vote counts (proportion=FALSE). ... args passed fields::image.plot()","code":""},{"path":"/reference/image.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"visualisation of joint and marginal distributions in STV preferences — image.SafeVote.stv","text":"image object, side-effect RStudio Plots pane","code":""},{"path":"/reference/ims_approval.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Approval — ims_approval","title":"IMS Approval — ims_approval","text":"Modified version ims_election, use approval voting.","code":""},{"path":"/reference/ims_approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Approval — ims_approval","text":"","code":"data(ims_approval)"},{"path":"/reference/ims_approval.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Approval — ims_approval","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, 0 indicating disapproval candidate 1 indicating approval.","code":""},{"path":"/reference/ims_election.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Election — ims_election","title":"IMS Election — ims_election","text":"Datasets containing anonymized votes past Council election Institute Mathematical Statistics (IMS). dataset ims_election original dataset used single transferable vote, candidate names changed.","code":""},{"path":"/reference/ims_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Election — ims_election","text":"","code":"data(ims_election)"},{"path":"/reference/ims_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Election — ims_election","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot. IMS Council voting done using STV method, thus ims_election dataset contains ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"/reference/ims_plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Plurality — ims_plurality","title":"IMS Plurality — ims_plurality","text":"Modified version ims_election, use plurality voting.","code":""},{"path":"/reference/ims_plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Plurality — ims_plurality","text":"","code":"data(ims_plurality)"},{"path":"/reference/ims_plurality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Plurality — ims_plurality","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, 1 voter's -preferred candidate 0 candidates.","code":""},{"path":"/reference/ims_score.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Score — ims_score","title":"IMS Score — ims_score","text":"Modified version ims_election, use score voting.","code":""},{"path":"/reference/ims_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Score — ims_score","text":"","code":"data(ims_score)"},{"path":"/reference/ims_score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Score — ims_score","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, higher values indicating -preferred candidates.","code":""},{"path":"/reference/ims_stv.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS STV — ims_stv","title":"IMS STV — ims_stv","text":"Copy ims_election, included backwards compatibility.","code":""},{"path":"/reference/ims_stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS STV — ims_stv","text":"","code":"data(ims_election)"},{"path":"/reference/ims_stv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS STV — ims_stv","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot. IMS Council voting done using STV method, thus ims_election dataset contains ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"/reference/invalid.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the invalid.votes member (if any) from the result of a count — invalid.votes","title":"Extracts the invalid.votes member (if any) from the result of a count — invalid.votes","text":"method added Jan 2022 -- named warning message apparently either never implemented, \"lost\" versioning.","code":""},{"path":"/reference/invalid.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the invalid.votes member (if any) from the result of a count — invalid.votes","text":"","code":"invalid.votes(x)"},{"path":"/reference/invalid.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the invalid.votes member (if any) from the result of a count — invalid.votes","text":"x value returned stv, condorcet, approval, plurality, score","code":""},{"path":"/reference/invalid.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the invalid.votes member (if any) from the result of a count — invalid.votes","text":"matrix one column per candidate one row per invalid ballot","code":""},{"path":"/reference/is.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"is.SafeRankExpt() — is.SafeRankExpt","title":"is.SafeRankExpt() — is.SafeRankExpt","text":".SafeRankExpt()","code":""},{"path":"/reference/is.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"","code":"is.SafeRankExpt(x)"},{"path":"/reference/is.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"x object unknown class","code":""},{"path":"/reference/is.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"TRUE x valid SafeRankExpt object","code":""},{"path":"/reference/is.valid.vote.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — is.valid.vote","title":"undocumented internal method — is.valid.vote","text":"undocumented internal method","code":""},{"path":"/reference/is.valid.vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — is.valid.vote","text":"","code":"is.valid.vote(x, method, ...)"},{"path":"/reference/is.valid.vote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — is.valid.vote","text":"x, method, ... undocumented","code":""},{"path":"/reference/is.valid.vote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — is.valid.vote","text":"undocumented","code":""},{"path":"/reference/loserMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a loser and their margin of victory — loserMargin","title":"Find a loser and their margin of victory — loserMargin","text":"Find loser margin victory","code":""},{"path":"/reference/loserMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a loser and their margin of victory — loserMargin","text":"","code":"loserMargin(votes)"},{"path":"/reference/loserMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a loser and their margin of victory — loserMargin","text":"votes cleaned ballots","code":""},{"path":"/reference/loserMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a loser and their margin of victory — loserMargin","text":"length-2 vector: index losing candidate, margin loss (0 tie, NA winners)","code":""},{"path":"/reference/new_SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"Constructor results SafeRank experiment","code":""},{"path":"/reference/new_SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"","code":"new_SafeRankExpt(   rankNames = list(),   marginNames = list(),   countMethod = character(0),   rankMethod = character(0),   datasetName = character(0),   experimentalMethod = character(0),   countArgs = list(),   nseats = integer(0),   otherFactors = list(),   unitFactors = list() )"},{"path":"/reference/new_SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"rankNames colnames per-candidate ranks marginNames colnames per-candidate margins countMethod secondary factor: counting method e.g. \"stv\" rankMethod secondary factor: ranking method e.g. \"elected\" datasetName secondary factor: name dataset ballots experimentalMethod secondary factor: name method simulated elections e.g. \"testFraction\" countArgs secondary factor: args passed countMethod nseats secondary factor: number seats filled otherFactors secondary factors, e.g. parameters experimentalMethod unitFactors per-unit factors derived PRNG experimental harness, e.g describing ballots randomly deleted testDeletions","code":""},{"path":"/reference/new_SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"object class SafeRankExpt","code":""},{"path":"/reference/ordered.preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.preferences","title":"Undocumented internal method — ordered.preferences","text":"Undocumented internal method","code":""},{"path":"/reference/ordered.preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.preferences","text":"","code":"ordered.preferences(vmat)"},{"path":"/reference/ordered.preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.preferences","text":"vmat undocumented","code":""},{"path":"/reference/ordered.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.tiebreak","title":"Undocumented internal method — ordered.tiebreak","text":"Undocumented internal method","code":""},{"path":"/reference/ordered.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.tiebreak","text":"","code":"ordered.tiebreak(vmat, seed = NULL)"},{"path":"/reference/ordered.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.tiebreak","text":"vmat undocumented seed undocumented","code":""},{"path":"/reference/plot.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"\"adjusted rank\" candidate ranking \\(r\\) plus scaled \"winning margin\". scaled margin \\(e^{-cx/\\sqrt{n}}\\), \\(x\\) adjusted margin (.e. number votes candidate ahead next-weaker candidate, adjusted number ballots \\(n\\) number seats \\(s\\)), \\(c>0\\) margin-scaling parameter cMargin.","code":""},{"path":"/reference/plot.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt plot(   x,   facetWrap = FALSE,   nResults = NA,   anBallots = 0,   cMargin = 1,   xlab = \"Ballots\",   ylab = \"Adjusted Rank\",   title = NULL,   subtitle = \"(default)\",   line = TRUE,   boxPlot = FALSE,   boxPlotCutInterval = 10,   pointSize = 1,   ... )"},{"path":"/reference/plot.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"x object containing experimental results facetWrap TRUE provides per-candidate scatterplots nResults number candidates whose results plotted (omitting least-favoured candidates first) anBallots, cMargin parameters rank-adjustment formula xlab, ylab axis labels title overall title plot.  Default: NULL subtitle subtitle plot.  Default: value nSeats non-zero rank-adjustment parameters line TRUE connect points lines, disable jitter boxPlot TRUE boxplot, rather default xy-scatter boxPlotCutInterval parameter boxplot, default 10 pointSize diameter points ... params generic plot()","code":""},{"path":"/reference/plot.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"graphics object, side-effect RStudio Plots pane","code":""},{"path":"/reference/plot.SafeRankExpt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"default value cMargin=1.0 draws visual attention candidates small winning margin, adjusted rank near \\(r+1\\).  Candidates anything small winning margin small rank adjustment, due exponential scaling. scaling linear \\(s/n\\) applied margins anBallots>0.  linear scaling may helpful way visualise winning margins STV elections margin victory elected candidate typically much larger quota \\(n/(s+1)\\) (Droop) \\(n/s\\) (Hare). linear scaling factor \\(/n\\), \\(\\) value anBallots, \\(s\\) number seats, \\(n\\) number ballots. plotting (inverted) adjusted rank scale, linearly-scaled margin added candidate's rank.  Note linearly-scaled margins zero \\(=0\\), thus effect adjusted rank.  might want increase value anBallots, starting 1.0, winning candidate's adjusted rank 1.0 ballots counted, confirm adjusted ranks candidates still congruent ranking (.e. rank-adjustment less 1 cases except perhaps initial transient small numbers ballots). anBallots cMargins non-zero, ranks adjusted exponentially-scaled margins linearly-scaled margins. resulting plot difficult interpret valid way. Todo: Accept list SafeVoteExpt objects. Todo: Multiple counts number ballots summarised box--whisker graphic, rather set jittered points. Todo: Consider developing linear scaling appropriate plotting stochastic experimental data derived Condorcet elections.","code":""},{"path":"/reference/plot.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"plot function shows evolution total score candidate well quota.","code":""},{"path":"/reference/plot.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv plot(x, xlab = \"Count\", ylab = \"Preferences\", point.size = 2, ...)"},{"path":"/reference/plot.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"x stv results xlab, ylab axis labels point.size diameter elected/eliminated points ... params generic plot()","code":""},{"path":"/reference/plot.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"graphics object, side-effect RStudio's Plots pane","code":""},{"path":"/reference/plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the plurality method — plurality","title":"Count votes using the plurality method — plurality","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"/reference/plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the plurality method — plurality","text":"","code":"plurality(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"/reference/plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the plurality method — plurality","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"/reference/plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the plurality method — plurality","text":"undocumented","code":""},{"path":"/reference/prepare.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce input 'data' into a matrix — prepare.votes","title":"Coerce input 'data' into a matrix — prepare.votes","text":"Coerce input 'data' matrix","code":""},{"path":"/reference/prepare.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce input 'data' into a matrix — prepare.votes","text":"","code":"prepare.votes(data, fsep = \"\\n\")"},{"path":"/reference/prepare.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce input 'data' into a matrix — prepare.votes","text":"data possibly .csv file, possibly R object fsep separation character .csv e.g. tab comma","code":""},{"path":"/reference/prepare.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce input 'data' into a matrix — prepare.votes","text":"matrix one row per ballot, one column per candidate, named rows columns","code":""},{"path":"/reference/print.summary.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"Print method summary.SafeRankExpt","code":""},{"path":"/reference/print.summary.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"","code":"# S3 method for summary.SafeRankExpt print(x, ...)"},{"path":"/reference/print.summary.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"x experimental results ... args generic print()","code":""},{"path":"/reference/print.summary.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"invisible(x), side-effects console","code":""},{"path":"/reference/print.summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary object — print.summary.SafeVote.approval","title":"print method for summary object — print.summary.SafeVote.approval","text":"print method summary object","code":""},{"path":"/reference/print.summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary object — print.summary.SafeVote.approval","text":"","code":"# S3 method for summary.SafeVote.approval print(x, ...)"},{"path":"/reference/print.summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary object — print.summary.SafeVote.approval","text":"x, ... undocumented","code":""},{"path":"/reference/print.summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary object — print.summary.SafeVote.approval","text":"undocumented","code":""},{"path":"/reference/print.summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"print method summary.SafeVote.condorcet","code":""},{"path":"/reference/print.summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"","code":"# S3 method for summary.SafeVote.condorcet print(x, ...)"},{"path":"/reference/print.summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"x object type summary.SafeVote.condorcet ... parameters passed generic print","code":""},{"path":"/reference/print.summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"textual description x","code":""},{"path":"/reference/print.summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary of plurality object — print.summary.SafeVote.plurality","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"print method summary plurality object","code":""},{"path":"/reference/print.summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"","code":"# S3 method for summary.SafeVote.plurality print(x, ...)"},{"path":"/reference/print.summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"x, ... undocumented","code":""},{"path":"/reference/print.summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"undocumented","code":""},{"path":"/reference/print.summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.score object — print.summary.SafeVote.score","title":"print method for summary.score object — print.summary.SafeVote.score","text":"print method summary.score object","code":""},{"path":"/reference/print.summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.score object — print.summary.SafeVote.score","text":"","code":"# S3 method for summary.SafeVote.score print(x, ...)"},{"path":"/reference/print.summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.score object — print.summary.SafeVote.score","text":"x, ... undocumented","code":""},{"path":"/reference/print.summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.score object — print.summary.SafeVote.score","text":"undocumented","code":""},{"path":"/reference/print.summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"print() method summary() SafeVote result","code":""},{"path":"/reference/print.summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"","code":"# S3 method for summary.SafeVote.stv print(x, ...)"},{"path":"/reference/print.summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"x election results ... args passed kable()","code":""},{"path":"/reference/print.summary.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"return value, called side-effect printing console","code":""},{"path":"/reference/rbind.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"add row SafeRankExpt object","code":""},{"path":"/reference/rbind.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt rbind(object, row)"},{"path":"/reference/rbind.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"object prior results experimentation row new observations","code":""},{"path":"/reference/rbind.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"SafeRankExpt object additional row","code":""},{"path":"/reference/readHil.html","id":null,"dir":"Reference","previous_headings":"","what":"read a set of ballots in .HIL format — readHil","title":"read a set of ballots in .HIL format — readHil","text":"rangevoting.org/TidemanData.html: data format developed David Hill. first line contains number candidates number elected. (Many elections multi-winner.) subsequent lines represent ballot papers, first number always 1. (format designed counting program treats first number number instances ordering candidates line.) Next lines sequence numbers representing voter's reported ranking: number candidate ranked first, number candidate ranked second, . end reported ranking signaled zero. zero beginning ranking signal list ballot papers ended. Next come names candidates, parentheses, required counting program, finally name election.","code":""},{"path":"/reference/readHil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a set of ballots in .HIL format — readHil","text":"","code":"readHil(filnm, quiet = FALSE)"},{"path":"/reference/readHil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a set of ballots in .HIL format — readHil","text":"filnm name file .HIL format quiet suppress diagnostic output","code":""},{"path":"/reference/readHil.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read a set of ballots in .HIL format — readHil","text":"matrix one row per ballot, one column per candidate, named rows columns, attributes \"nseats\" \"ename\"","code":""},{"path":"/reference/remove.candidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a candidate, amending ballot papers as required — remove.candidate","title":"Remove a candidate, amending ballot papers as required — remove.candidate","text":"Remove candidate, amending ballot papers required","code":""},{"path":"/reference/remove.candidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a candidate, amending ballot papers as required — remove.candidate","text":"","code":"remove.candidate(votes, can, quiet = TRUE)"},{"path":"/reference/remove.candidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a candidate, amending ballot papers as required — remove.candidate","text":"votes ballot box can candidate removed quiet suppress diagnostics","code":""},{"path":"/reference/remove.candidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a candidate, amending ballot papers as required — remove.candidate","text":"amended ballot box","code":""},{"path":"/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the score (or range) method. — score","title":"Count votes using the score (or range) method. — score","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the score (or range) method. — score","text":"","code":"score(   votes,   nseats = 1,   max.score = NULL,   larger.wins = TRUE,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the score (or range) method. — score","text":"votes, nseats, max.score, larger.wins, fsep, quiet, ... undocumented","code":""},{"path":"/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the score (or range) method. — score","text":"undocumented","code":""},{"path":"/reference/solveTiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"Undocumented internal method, renamed 'solve.tiebreak' avoid confusion generic solve()","code":""},{"path":"/reference/solveTiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"","code":"solveTiebreak(method, prefs, icans, ordered.ranking = NULL, elim = TRUE)"},{"path":"/reference/solveTiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"method undocumented prefs undocumented icans undocumented ordered.ranking undocumented elim undocumented","code":""},{"path":"/reference/solveTiebreak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"undocumented","code":""},{"path":"/reference/stv.html","id":null,"dir":"Reference","previous_headings":"","what":"Count preferential ballots using an STV method — stv","title":"Count preferential ballots using an STV method — stv","text":"votes parameter described Details condorcet following additional semantics.","code":""},{"path":"/reference/stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count preferential ballots using an STV method — stv","text":"","code":"stv(   votes,   nseats = NULL,   eps = 0.001,   equal.ranking = FALSE,   fsep = \"\\t\",   ties = c(\"f\", \"b\"),   quota.hare = FALSE,   constant.quota = FALSE,   win.by.elim = TRUE,   group.nseats = NULL,   group.members = NULL,   complete.ranking = FALSE,   invalid.partial = FALSE,   verbose = FALSE,   seed = NULL,   quiet = FALSE,   digits = 3,   backwards.compatible = FALSE,   safety = 1,   ... )"},{"path":"/reference/stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count preferential ballots using an STV method — stv","text":"votes array one column per candidate one row per ballot, described Details condorcet() nseats number seats filled election eps fuzz-factor comparing fractional votes.  default 0.001 preserved legacy code, injecting substantial validity hazards codebase.  attempted mitigate hazards SafeVote v1.0.0.  prefer instead retain backwards-compatibility legacy code vote_2.3-2 knowledge , even hazards adequately addressed, resulting code unlikely reliable replicating results implementation many variants \"STV\" counting methods.  Please see description a53_hil dataset package preliminary findings magnitude vote-count-variances may injected differing implementations broadly-similar \"STV\" counting methods. equal.ranking TRUE, equal preferences allowed. fsep column-separator output ties vector tie-breaking methods: 'f' forward, 'b' backward quota.hare TRUE Hare quota, FALSE Droop quota (default) constant.quota TRUE quota held constant.  -rides quota.hare. Default FALSE win..elim TRUE (default) quota waived candidates vacant seats.  Note: lower limit quota waived, candidate may elected zero votes. group.nseats number seats reserved members group group.members vector members group reserved seats complete.ranking TRUE default.  parameter retained solely backwards compatibility vote.2.3-2. effect elections nseats explicitly specified call stv(). invalid.partial TRUE ballots specify complete ranking candidates informal (aka \"invalid\") .e. ignored (warning).  Default FALSE. verbose TRUE diagnostic output seed integer seed tie-breaking.  Warning: non-NULL, PRNG R reseeded prior every random tie-break among possibly-elected candidates.  preserved functionality branch allow regression legacy codebase vote_2.3-2. SafeVote default value seed NULL rather legacy value 1234, mitigate validity hazard PRNG reseedings stochastic experiment. quiet TRUE suppress console output digits number significant digits output table backwards.compatible TRUE regress vote2_3.2 disabling $margins, $fuzz, $rankingTable, $safeRank safety number standard deviations vote-counts, producing safeRank clustering near-ties complete ranking ... undocumented intent (preserved legacy code)","code":""},{"path":"/reference/stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count preferential ballots using an STV method — stv","text":"object class vote.stv.  Note: winning margins object valid elected candidates (total) ranking, must adjusted within tiegroups valid candidates' (possibly partial) safeRank.","code":""},{"path":"/reference/stv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count preferential ballots using an STV method — stv","text":"default preferences allowed contain duplicates per ballot. However, argument equal.ranking set TRUE, ballots allowed ranking multiple candidates. desired format preference $$ duplicate, must exactly $– 1$ preferences $j$ $0 < j < $. example, valid ordered preferences 1; 1; 3; 4; …, 1; 2; 3; 3; 3; 6; …, 1; 1; 2; 3; …, 1; 2; 3; 3; 3; 5; 6; …. data contain invalid votes, automatically corrected warning issued calling correct.ranking function. equal ranking allowed (equal.ranking = FALSE), argument invalid.partial can used make ballots containing duplicates gaps partially valid. TRUE, ballot considered valid preference normal case allowed. example, ballots 1; 2; 3; 4; 4; 6 1; 2; 3; 5; 6; 7 converted 1; 2; 3; 0; 0; 0, ballots contain valid ranking third preference. default, ties STV algorithm resolved using forwards tie-breaking method, see Newland Briton (Section 5.2.5). Argument ties can set ”b” order use backwards tie-breaking method, see O’Neill (2004). addition, methods complemented following “ordered” method: Prior STV election candidates ordered number first preferences. Equal ranks resolved moving number second preferences, third . Remaining ties broken random draws. complete ordering used break tie resolved forwards backwards method. least one tie processing, output contains row indicating count tie-break happened (see ties element Value section explanation symbols). ordered tiebreaking described can analysed outside stv function using ordered.tiebreak function viewing -priori ordering (highest number best lowest worst). ranking produced comparing candidates along columns matrix returned ordered.preferences.","code":""},{"path":"/reference/stv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count preferential ballots using an STV method — stv","text":"","code":"data(food_election) stv(food_election, safety = 0.0) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          2 #> Number of unfilled seats: 0 #>  #> Fuzz on safeRank:\t 0 #> Complete ranking: #>  #> |             | TotalRank|SafeRank |  Margin  | #> |:------------|---------:|:--------|:--------:| #> |Oranges      |         2|2        | 1.445111 | #> |Pears        |         5|5        | 0.000000 | #> |Chocolate    |         1|1        | 8.000000 | #> |Strawberries |         3|3        | 1.777444 | #> |Sweets       |         4|4        | 2.777444 | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|     2| 3-trans|      3| 4-trans|       4| #> |:------------|---------:|-------:|-----:|-------:|------:|-------:|-------:| #> |Oranges      |     4.000|   0.000| 4.000|       2|  6.000|   0.000|   6.000| #> |Pears        |     2.000|   0.000| 2.000|      -2|       |        |        | #> |Chocolate    |    12.000|  -5.332|      |        |       |        |        | #> |Strawberries |     1.000|   3.555| 4.555|       0|  4.555|   0.000|   4.555| #> |Sweets       |     1.000|   1.777| 2.777|       0|  2.777|  -2.777|        | #> |Tie-breaks   |          |        |      |        |       |        |        | #> |Elected      | Chocolate|        |      |        |       |        | Oranges| #> |Eliminated   |          |        | Pears|        | Sweets|        |        | #>  #> Elected: Chocolate, Oranges  #>  stv(food_election, nseats = 2) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          2 #> Number of unfilled seats: 0 #>  #> Fuzz on safeRank:\t 4.472136 #> Complete ranking: #>  #> |             | TotalRank|SafeRank |  Margin  | #> |:------------|---------:|:--------|:--------:| #> |Oranges      |         2|2        | 1.445111 | #> |Pears        |         5|2        | 0.000000 | #> |Chocolate    |         1|1        | 8.000000 | #> |Strawberries |         3|2        | 1.777444 | #> |Sweets       |         4|2        | 2.777444 | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|     2| 3-trans|      3| 4-trans|       4| #> |:------------|---------:|-------:|-----:|-------:|------:|-------:|-------:| #> |Oranges      |     4.000|   0.000| 4.000|       2|  6.000|   0.000|   6.000| #> |Pears        |     2.000|   0.000| 2.000|      -2|       |        |        | #> |Chocolate    |    12.000|  -5.332|      |        |       |        |        | #> |Strawberries |     1.000|   3.555| 4.555|       0|  4.555|   0.000|   4.555| #> |Sweets       |     1.000|   1.777| 2.777|       0|  2.777|  -2.777|        | #> |Tie-breaks   |          |        |      |        |       |        |        | #> |Elected      | Chocolate|        |      |        |       |        | Oranges| #> |Eliminated   |          |        | Pears|        | Sweets|        |        | #>  #> Elected: Chocolate, Oranges  #>"},{"path":"/reference/sumOfVotes.html","id":null,"dir":"Reference","previous_headings":"","what":"internal method, computes column-sums — sumOfVotes","title":"internal method, computes column-sums — sumOfVotes","text":"Renamed 'sum.votes' avoid confusion generic sum()","code":""},{"path":"/reference/sumOfVotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal method, computes column-sums — sumOfVotes","text":"","code":"sumOfVotes(votes)"},{"path":"/reference/sumOfVotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal method, computes column-sums — sumOfVotes","text":"votes ballots rows, candidates columns","code":""},{"path":"/reference/sumOfVotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal method, computes column-sums — sumOfVotes","text":"vector votes candidate","code":""},{"path":"/reference/summary.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for SafeRankExpt — summary.SafeRankExpt","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"summary method SafeRankExpt","code":""},{"path":"/reference/summary.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt summary(object, ...)"},{"path":"/reference/summary.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"object experimental results summarised ... args generic summary()","code":""},{"path":"/reference/summary.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"summary.SafeRankExpt object","code":""},{"path":"/reference/summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for approval results — summary.SafeVote.approval","title":"summary method for approval results — summary.SafeVote.approval","text":"summary method approval results","code":""},{"path":"/reference/summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for approval results — summary.SafeVote.approval","text":"","code":"# S3 method for SafeVote.approval summary(object, ...)"},{"path":"/reference/summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for approval results — summary.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"/reference/summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for approval results — summary.SafeVote.approval","text":"undocumented","code":""},{"path":"/reference/summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for condorcet() results — summary.SafeVote.condorcet","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"Summary method condorcet() results","code":""},{"path":"/reference/summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet summary(object, ...)"},{"path":"/reference/summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"object type SafeVote.condorcet ... undocumented, currently unused","code":""},{"path":"/reference/summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"data.frame object","code":""},{"path":"/reference/summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for plurality object — summary.SafeVote.plurality","title":"summary method for plurality object — summary.SafeVote.plurality","text":"summary method plurality object","code":""},{"path":"/reference/summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for plurality object — summary.SafeVote.plurality","text":"","code":"# S3 method for SafeVote.plurality summary(object, ...)"},{"path":"/reference/summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for plurality object — summary.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"/reference/summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for plurality object — summary.SafeVote.plurality","text":"descriptive dataframe","code":""},{"path":"/reference/summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for score object — summary.SafeVote.score","title":"summary method for score object — summary.SafeVote.score","text":"summary method score object","code":""},{"path":"/reference/summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for score object — summary.SafeVote.score","text":"","code":"# S3 method for SafeVote.score summary(object, ...)"},{"path":"/reference/summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for score object — summary.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"/reference/summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for score object — summary.SafeVote.score","text":"undocumented","code":""},{"path":"/reference/summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"summary() method for a SafeVote result — summary.SafeVote.stv","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"summary() method SafeVote result","code":""},{"path":"/reference/summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv summary(object, ..., digits = 3)"},{"path":"/reference/summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"object undocumented, legacy code ... undocumented digits undocumented","code":""},{"path":"/reference/summary.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"data.frame summarising object, use print method","code":""},{"path":"/reference/testAdditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the sensitivity of a result to tactical voting. — testAdditions","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"Ballots added specified number simulated elections (arep) held.   favoured candidate specified, ballot-box stuffed ballots awarding first-preference candidate. Alternatively, tacticalBallot may specified.  favoured tacticalBallot NULL, random candidate selected favoured one.","code":""},{"path":"/reference/testAdditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"testAdditions(   votes,   ainc = 1,   arep = NULL,   favoured = NULL,   tacticalBallot = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = list(),   exptName = NULL,   equiet = FALSE,   everbose = FALSE )"},{"path":"/reference/testAdditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"votes set ballots, vote_2.3.2 ainc Number ballots added step arep Maximum number ballot-stuffed elections run favoured Name candidate \"plumped\".  NULL, random candidate selected among candidates initially top-ranked. candidates fully-ranked random, identical ballot paper stuffed multiple times.  integer value favoured interpreted index candidate names. tacticalBallot ballot paper .e. vector length ncol(ballots). argument non-NULL, takes precedence favoured ballot box stuffed. rankMethod \"safeRank\" (default), \"elected\", \"rank\".  \"rank\" total ranking candidates, ties broken random.  \"elected\" assigns rank=1 elected candidates, rank=2 eliminated candidates. countMethod countMethod \"stv\" (default) \"condorcet\" countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. equiet TRUE suppress experimental output everbose TRUE produce diagnostic output experiment","code":""},{"path":"/reference/testAdditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"matrix experimental results, dimension \\(n\\) \\(2m+1\\), \\(n\\) number elections \\(m\\) number candidates.  first column named \"nBallots\".  columns indicate ranking eponymous candidate, margin next-lower-ranked candidate.","code":""},{"path":"/reference/testAdditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"data(food_election)  testAdditions(food_election, arep = 2, favoured = \"Strawberries\",    countArgs = list(safety = 0)) #>  #> Adding up to 2 stv ballots = ( 4 2 5 1 3 ) #> Testing progress:  1, 2 #>  #> Results of testAdditions at 2023-01-13 21:17:20 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | safety| #> |:---------|------:| #> |countArgs |      0| #>  #>  #> |             | ainc| arep|                                                         tacticalBallot| #> |:------------|----:|----:|----------------------------------------------------------------------:| #> |otherFactors |    1|    2| c(Oranges = 4, Pears = 2, Chocolate = 5, Strawberries = 1, Sweets = 3)| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries| m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|--------:| #> |GRK0   |       20|       2|     5|         1|            3|      4| 1.4451111|       0|           8|      1.7774444| 2.777444| #> |GRK1   |       21|       2|     5|         1|            3|      4| 0.6673333|       0|           8|      2.6663333| 2.666333| #> |GRK2   |       22|       3|     5|         1|            2|      4| 3.4447778|       0|           8|      0.1104444| 2.555222|"},{"path":"/reference/testDeletions.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the safety of a preliminary result for an election — testDeletions","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"Ballots deleted random ballot-box, election results computed per dinc ballot-deletions.  experiment terminates specified number ballots deleted, specified number ballot-counts occurred.  Note: ballot-counts correlated.  Use testFraction() experiment independently-drawn samples ballot-box.","code":""},{"path":"/reference/testDeletions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"testDeletions(   votes,   countMethod = \"stv\",   countArgs = list(),   dstart = NULL,   dinc = NULL,   dlimit = NULL,   drep = NULL,   rankMethod = \"safeRank\",   exptName = NULL,   equiet = FALSE,   everbose = FALSE )"},{"path":"/reference/testDeletions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"votes set ballots, vote_2.3.2 countMethod \"stv\" (default) \"condorcet\" countArgs List args passed countMethod (addition votes) dstart Number ballots first ballot-count (selected random votes, without replacement) dinc Number ballots deleted subsequent steps dlimit Maximum number ballots delete (addition dstart) drep Maximum number elections (required dinc=0) rankMethod \"safeRank\" (default), \"elected\", \"rank\".  \"rank\" total ranking candidates, ties broken random.  \"elected\" assigns rank=1 elected candidates, rank=2 eliminated candidates. exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. equiet TRUE suppress experimental output everbose TRUE produce diagnostic output experiment","code":""},{"path":"/reference/testDeletions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"SafeRankExpt object, describing experiment results","code":""},{"path":"/reference/testDeletions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"data(food_election) testDeletions(food_election) #> Number of ballots counted by stv: 20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Results of testDeletions at 2023-01-13 21:17:21 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |             | dstart| dinc| dlimit| drep| #> |:------------|------:|----:|------:|----:| #> |otherFactors |     20|    2|      2|   10| #>  #> Unit factors: initSample, removedBallots #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|---------:| #> |VIY0   |       20|       2|     2|         1|            2|      2|  6.000000|       0|           8|      4.5548889| 2.7774444| #> |VIY1   |       18|       2|     2|         1|            2|      2|  5.364364|       2|           7|      4.0000000| 0.0000000| #> |VIY2   |       16|       2|     2|         1|            2|      2|  5.000000|       0|           6|      4.2659667| 1.3997000| #> |VIY3   |       14|       2|     2|         1|            2|      2|  3.000000|       1|           6|      4.3695926| 0.9627407| #> |VIY4   |       12|       2|     2|         1|            2|      2|  3.429429|       1|           4|      3.0000000| 0.0000000| #> |VIY5   |       10|       1|     1|         1|            1|      1|  4.000000|       1|           7|      2.2213889| 0.0000000| #> |VIY6   |        8|       1|     1|         1|            1|      1|  3.000000|       0|           5|      1.8658667| 0.4664667| #> |VIY7   |        6|       1|     3|         1|            3|      3|  3.000000|       0|           3|      0.0000000| 0.0000000| #> |VIY8   |        4|       1|     1|         1|            1|      1|  2.000000|       0|           2|      0.6656667| 0.0000000| #> |VIY9   |        2|       2|     2|         1|            2|      2|  0.000000|       0|           2|      1.3323333| 0.0000000| testDeletions(food_election, countMethod=\"stv\",   countArgs=list(complete.ranking=TRUE)) #> Number of ballots counted by stv: 20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Results of testDeletions at 2023-01-13 21:17:21 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | complete.ranking| #> |:---------|----------------:| #> |countArgs |             TRUE| #>  #>  #> |             | dstart| dinc| dlimit| drep| #> |:------------|------:|----:|------:|----:| #> |otherFactors |     20|    2|      2|   10| #>  #> Unit factors: initSample, removedBallots #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|---------:| #> |IVX0   |       20|       2|     2|         1|            2|      2|     4.000|       2|       8.000|       6.777111| 3.8885556| #> |IVX1   |       18|       2|     2|         1|            2|      2|     4.000|       2|       7.000|       6.090273| 2.9087273| #> |IVX2   |       16|       2|     2|         1|            2|      2|     4.000|       1|       6.000|       5.399400| 2.9329333| #> |IVX3   |       14|       2|     2|         1|            2|      2|     3.000|       1|       6.000|       4.703148| 2.9625185| #> |IVX4   |       12|       2|     2|         1|            2|      2|     3.000|       1|       4.000|       3.856571| 2.1424286| #> |IVX5   |       10|       2|     2|         1|            2|      2|     3.000|       0|       4.000|       3.047048| 2.2852857| #> |IVX6   |        8|       1|     1|         1|            1|      1|     3.000|       0|       5.000|       1.466267| 2.1994000| #> |IVX7   |        6|       2|     2|         1|            2|      2|     1.000|       0|       4.000|       1.599600| 2.3994000| #> |IVX8   |        4|       2|     2|         1|            2|      2|     1.000|       0|       2.000|       1.554889| 0.7774444| #> |IVX9   |        2|       1|     1|         1|            1|      1|     1.799|       0|       1.799|       0.799000| 0.0000000|"},{"path":"/reference/testFraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"Starting number (astart) randomly-selected ballots, increasingly-large collection randomly-selected ballots counted. ballots chosen independently without replacement experimental unit; want count decreasingly-sized portions single sample ballots, use testDeletions().","code":""},{"path":"/reference/testFraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"","code":"testFraction(   votes = NULL,   astart = NULL,   ainc = NULL,   arep = NULL,   trep = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = list(),   exptName = NULL,   equiet = FALSE,   everbose = FALSE )"},{"path":"/reference/testFraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"votes numeric matrix: one row per ballot, one column per candidate astart Starting number ballots (min 2) ainc Number ballots added step. Must non-negative. arep Number repetitions test step. Required non-NULL ainc=0 && .null(trep)`. trep Limit total number simulated elections. Required non-NULL ainc=0 && .null(arep). rankMethod \"safeRank\" (default), \"elected\", \"rank\".  \"rank\" total ranking candidates, ties broken random.  \"elected\" assigns rank=1 elected candidates, rank=2 eliminated candidates. countMethod countMethod \"stv\" (default) \"condorcet\" countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. equiet TRUE suppress experimental output everbose TRUE produce diagnostic output experiment","code":""},{"path":"/reference/testFraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"SafeRankExpt object experimental results.","code":""},{"path":"/reference/testFraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"","code":"data(food_election) testFraction(food_election, countMethod=\"condorcet\",              countArgs=list(safety=0.5,complete.ranking=TRUE)) #> Progress in counting condorcet ballots: #>  10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100% #>  #> Results of testFraction at 2023-01-13 21:17:21 #>  #> Dataset = food_election, countMethod = condorcet, rankMethod = safeRank #>  #> |          | safety| complete.ranking| #> |:---------|------:|----------------:| #> |countArgs |    0.5|             TRUE| #>  #>  #> |             | astart| ainc| arep| #> |:------------|------:|----:|----:| #> |otherFactors |      2|    2|    1| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries| m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|--------:| #> |ZRG1   |        2|       4|     4|         1|            2|      2|         0|       0|           5|              3|        6| #> |ZRG2   |        4|       3|     4|         1|            2|      4|         4|       0|           3|              5|        0| #> |ZRG3   |        6|       4|     4|         1|            2|      3|         0|       0|           7|              7|        6| #> |ZRG4   |        8|       4|     5|         1|            2|      2|         3|       0|           6|              3|        6| #> |ZRG5   |       10|       4|     4|         1|            2|      2|         0|       1|          17|             11|        9| #> |ZRG6   |       12|       2|     4|         1|            2|      5|        10|       5|           5|             11|        0| #> |ZRG7   |       14|       2|     5|         1|            3|      3|         9|       0|           6|              4|        5| #> |ZRG8   |       16|       4|     5|         1|            2|      3|         7|       0|          19|              9|        5| #> |ZRG9   |       18|       3|     5|         1|            2|      3|        15|       0|          19|              6|       12| #> |ZRG10  |       20|       3|     5|         1|            2|      4|         6|       0|          20|              6|        8| testFraction(dublin_west, astart=20, ainc=10, arep=2, trep=3,               countMethod=\"stv\", rankMethod=\"elected\", equiet=FALSE) #> Progress in counting stv ballots: #>  33.3%, 66.7%, 100% #>  #> Results of testFraction at 2023-01-13 21:17:21 #>  #> Dataset = dublin_west, countMethod = stv, rankMethod = elected #>  #> |             | astart| ainc| arep| #> |:------------|------:|----:|----:| #> |otherFactors |     20|   10|    2| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Bonnie| Burton| Ryan| Higgins| Lenihan| McDonald| Morrissey| Smyth| Terry| m.Bonnie|  m.Burton|   m.Ryan| m.Higgins| m.Lenihan| m.McDonald| m.Morrissey| m.Smyth|  m.Terry| #> |:------|--------:|------:|------:|----:|-------:|-------:|--------:|---------:|-----:|-----:|--------:|---------:|--------:|---------:|---------:|----------:|-----------:|-------:|--------:| #> |YPH1   |       20|      2|      1|    1|       1|       2|        1|         2|     2|     2| 3.333167| 1.3709671| 1.370967|  3.370967|  3.333167|  0.7046338|    0.000000|       1| 0.000000| #> |YPH2   |       30|      2|      2|    2|       1|       1|        1|         1|     2|     2| 1.000000| 5.3745130| 5.498979|  5.038760| 10.038760|  1.0387604|    0.663737|       0| 1.749807| #> |YPH3   |       20|      2|      2|    2|       1|       1|        2|         1|     2|     1| 0.000000| 0.5822364| 2.873669|  3.221778|  8.221778|  3.1710228|    2.194986|       0| 3.110889|"},{"path":"/reference/translate.ties.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method from original code — translate.ties","title":"Undocumented internal method from original code — translate.ties","text":"Undocumented internal method original code","code":""},{"path":"/reference/translate.ties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method from original code — translate.ties","text":"","code":"translate.ties(ties, method)"},{"path":"/reference/translate.ties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method from original code — translate.ties","text":"ties undocumented method 'f' forward, 'b' backward","code":""},{"path":"/reference/translate.ties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method from original code — translate.ties","text":"undocumented","code":""},{"path":"/reference/uk_labour_2010.html","id":null,"dir":"Reference","previous_headings":"","what":"UK Labour Party Leader 2010 — uk_labour_2010","title":"UK Labour Party Leader 2010 — uk_labour_2010","text":"ballots cast Labour MPs MEPs election party's leader 2010, published Manchester Guardian. names electors suppressed file, available Rangevoting.org along extensive commentary election.","code":""},{"path":"/reference/uk_labour_2010.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK Labour Party Leader 2010 — uk_labour_2010","text":"","code":"data(uk_labour_2010)"},{"path":"/reference/uk_labour_2010.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK Labour Party Leader 2010 — uk_labour_2010","text":"data frame 266 observations 5 candidates.","code":""},{"path":"/reference/view.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for approval object — view.SafeVote.approval","title":"view method for approval object — view.SafeVote.approval","text":"view method approval object","code":""},{"path":"/reference/view.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for approval object — view.SafeVote.approval","text":"","code":"# S3 method for SafeVote.approval view(object, ...)"},{"path":"/reference/view.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for approval object — view.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"/reference/view.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for approval object — view.SafeVote.approval","text":"undocumented","code":""},{"path":"/reference/view.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for SafeVote.condorcet — view.SafeVote.condorcet","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view method SafeVote.condorcet","code":""},{"path":"/reference/view.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet view(object, ...)"},{"path":"/reference/view.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"object type SafeVote.condorcet ... see view.SafeVote.approval","code":""},{"path":"/reference/view.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view object","code":""},{"path":"/reference/view.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for plurality object — view.SafeVote.plurality","title":"view method for plurality object — view.SafeVote.plurality","text":"view method plurality object","code":""},{"path":"/reference/view.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for plurality object — view.SafeVote.plurality","text":"","code":"# S3 method for SafeVote.plurality view(object, ...)"},{"path":"/reference/view.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for plurality object — view.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"/reference/view.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for plurality object — view.SafeVote.plurality","text":"undocumented","code":""},{"path":"/reference/view.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for score object — view.SafeVote.score","title":"view method for score object — view.SafeVote.score","text":"view method score object","code":""},{"path":"/reference/view.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for score object — view.SafeVote.score","text":"","code":"# S3 method for SafeVote.score view(object, ...)"},{"path":"/reference/view.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for score object — view.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"/reference/view.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for score object — view.SafeVote.score","text":"undocumented","code":""},{"path":"/reference/view.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for the result of an stv() ballot-count — view.SafeVote.stv","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"view method result stv() ballot-count","code":""},{"path":"/reference/view.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv view(object, ...)"},{"path":"/reference/view.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"object object viewed ... additional parameters, passed formattable::formattable()","code":""},{"path":"/reference/view.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"html-formatted object","code":""},{"path":"/reference/view.html","id":null,"dir":"Reference","previous_headings":"","what":"generic view() for classes defined in this package — view","title":"generic view() for classes defined in this package — view","text":"generic view() classes defined package","code":""},{"path":"/reference/view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic view() for classes defined in this package — view","text":"","code":"view(object, ...)"},{"path":"/reference/view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic view() for classes defined in this package — view","text":"object election object viewed ... additional parameters, passed formattable::formattable()","code":""},{"path":"/reference/view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic view() for classes defined in this package — view","text":"html-formatted object, side-effect RStudio's Viewer pane","code":""},{"path":"/reference/winnerMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a winner and their margin of victory — winnerMargin","title":"Find a winner and their margin of victory — winnerMargin","text":"Find winner margin victory","code":""},{"path":"/reference/winnerMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a winner and their margin of victory — winnerMargin","text":"","code":"winnerMargin(votes)"},{"path":"/reference/winnerMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a winner and their margin of victory — winnerMargin","text":"votes cleaned ballots","code":""},{"path":"/reference/winnerMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a winner and their margin of victory — winnerMargin","text":"length-2 vector: index winning candidate, margin victory (0 tie, NA losers)","code":""},{"path":"/reference/yale_ballots.html","id":null,"dir":"Reference","previous_headings":"","what":"Yale Faculty Senate 2016 — yale_ballots","title":"Yale Faculty Senate 2016 — yale_ballots","text":"data follows structure 2016 Yale Faculty Senate election, candidate names anonomyised permuted. Imported SafeVote STV v1.0.2, applying STV::cleanBallots method remove ten empty rows.","code":""},{"path":"/reference/yale_ballots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yale Faculty Senate 2016 — yale_ballots","text":"","code":"data(yale_ballots)"},{"path":"/reference/yale_ballots.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Yale Faculty Senate 2016 — yale_ballots","text":"data frame 479 observations 44 candidates.","code":""}]
