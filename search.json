[{"path":"https://cthombor.github.io/SafeVote/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clark Thomborson. Maintainer.","code":""},{"path":"https://cthombor.github.io/SafeVote/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomborson C (2022). SafeVote: Election Vote Counting Safety Features. R package version 0.99, https://cthombor.github.io/SafeVote/.","code":"@Manual{,   title = {SafeVote: Election Vote Counting with Safety Features},   author = {Clark Thomborson},   year = {2022},   note = {R package version 0.99},   url = {https://cthombor.github.io/SafeVote/}, }"},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"safevote","dir":"","previous_headings":"","what":"Election Vote Counting with Safety Features","title":"Election Vote Counting with Safety Features","text":"goals SafeVote investigate safety announcing preliminary results election, allow experimental study safety complete ranking candidates (party list) derived small-scale election preferential ballots.","code":""},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Election Vote Counting with Safety Features","text":"can install development version SafeVote GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cthombor/SafeVote\")"},{"path":"https://cthombor.github.io/SafeVote/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Election Vote Counting with Safety Features","text":"mod vote.2.3-2 reports margins victory election. value safety parameter affect completeness safeRank ordering candidates. Setting safety = 0 cause safeRank total ranking candidates, except rare case exact tie. “fuzz” z vote-differentials safeRank clustering candidates z = sn1/2, s value safety parameter n number ballots. safety-testing routines supplied, support experimental study statistical behaviour ballot counting methods. example, testFraction draws series independent samples ballot box, expect helpful estimating number ballots required form stable result. seen , case dublin_west dataset, thousand ballots sufficient reliably determine three winners (Lenihan, Higgins, Burton). contrast, relative ranking Ryan Morrissey still somewhat unstable last thousands ballots counted.  testAdditions can used assess sensitivity STV election tactical-voting strategy “plumping” favoured candidate. example, find takes two “plumping” ballots shift “Strawberries” third place second place food_election dataset. Note test set safety parameter stv ballot-counting method zero, output testAdditions reveals complete ranking candidates unless exact tie. testDeletions deletes ballots sequentially ballot box, counting deletion. results plotted inverse order collection (.e. increasing order number ballots n) see possible evolution preliminary results election initial order ballots ballot box randomised. Note plot results testFraction quite similar appearance, however ballot boxes counted testFraction independently sampled (“bootstrapped”) full dataset ballots. contrast, testDeletions samples without replacement original ballot box, constructing next experimental unit.  plots , “adjusted rank” candidate ranking r plus scaled margin victory. -popular candidate rank 1, invert usual convention x-axis Cartesian plots first-elected candidate appears first legend scaled margin uppermost. margin victory m must non-negative may quite large number; small margins victory affect safety election result: compute scaled margin $e^{-cm/\\sqrt{n}}$. exponential adjustment hugely accentuates visual importance margins comparable magnitude square root number ballots n multiplied number seats s) – rough proxy standard deviation candidate’s margin victory election least voters marking ballots essentially random. margin-scaling parameter c may adjusted using parameter cMargin plot.SafeVote. Note Morrissey’s adjusted rank visually close McDonald’s adjusted rank ballots counted sample testDeletions plot , suggesting (correctly!) relatively small variations voter behaviour affect relative ranking.","code":"library(SafeVote)     data(food_election)     stv(food_election)     stv(food_election, safety=0.25)     stv(food_election, safety=0) data(dublin_west) plot(testFraction(dublin_west,astart=8,ainc=20,countArgs=list(nseats=3))) data(food_election)  testAdditions(food_election, arep = 2, favoured = \"Strawberries\",    countArgs = list(safety = 0)) #>  #> Adding up to 2 stv ballots = ( 3 5 4 1 2 ) #> Testing progress:  1, 2 #>  #> Results of testAdditions at 2022-12-26 08:25:22 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | safety| #> |:---------|------:| #> |countArgs |      0| #>  #>  #> |             | ainc| arep|                                                         tacticalBallot| #> |:------------|----:|----:|----------------------------------------------------------------------:| #> |otherFactors |    1|    2| c(Oranges = 3, Pears = 5, Chocolate = 4, Strawberries = 1, Sweets = 2)| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|---------:| #> |SBK0   |       20|       2|     5|         1|            3|      4| 1.4451111|       2|           8|      1.7774444| 0.7774444| #> |SBK1   |       21|       2|     5|         1|            3|      4| 0.6673333|       2|           8|      2.6663333| 0.6663333| #> |SBK2   |       22|       3|     5|         1|            2|      4| 3.4447778|       2|           8|      0.1104444| 0.5552222| xr <- testDeletions(dublin_west,dinc=25,dstart=29988,quiet=FALSE,       countArgs=list(safety=0.0,complete.ranking=TRUE,nseats=3))     save(xr,file=\"../s0di25ns3.rdata\")     plot(xr,title=\"testDeletions, file = s0di25ns3\")"},{"path":"https://cthombor.github.io/SafeVote/reference/SafeVote-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","title":"SafeVote: Election Vote Counting with Safety Features — SafeVote-package","text":"Experimental fork vote_2.3-2, SafeRank safety tests.","code":""},{"path":[]},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the approval method — approval","title":"Count votes using the approval method — approval","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the approval method — approval","text":"","code":"approval(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the approval method — approval","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the approval method — approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/as.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"as.SafeRankExpt() — as.SafeRankExpt","title":"as.SafeRankExpt() — as.SafeRankExpt","text":".SafeRankExpt()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/as.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"","code":"as.SafeRankExpt(df)"},{"path":"https://cthombor.github.io/SafeVote/reference/as.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"df data.frame object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/as.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as.SafeRankExpt() — as.SafeRankExpt","text":"SafeRankExpt object, stop() df fails sanity checks","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.score","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.score","text":"","code":"assemble.args.for.check.score(x, max.score = NULL, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.score","text":"x, max.score, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — assemble.args.for.check.stv","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — assemble.args.for.check.stv","text":"","code":"assemble.args.for.check.stv(x, equal.ranking = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — assemble.args.for.check.stv","text":"x, equal.ranking, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/assemble.args.for.check.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — assemble.args.for.check.stv","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — backwards.tiebreak","title":"Undocumented internal method — backwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — backwards.tiebreak","text":"","code":"backwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/backwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — backwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter-checking method for nseats (internal) — check.nseats","title":"parameter-checking method for nseats (internal) — check.nseats","text":"parameter-checking method nseats (internal)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter-checking method for nseats (internal) — check.nseats","text":"","code":"check.nseats(   nseats = NULL,   ncandidates,   default = 1,   mcan = NULL,   complete.ranking = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parameter-checking method for nseats (internal) — check.nseats","text":"nseats initially-specified number seats filled election ncandidates number candidates standing election default return value function nseats=NULL mcan deprecated name nseats complete.ranking TRUE, return value 1..ncandidates FALSE, return value 1..ncandidates-1 (backwards compatibility)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parameter-checking method for nseats (internal) — check.nseats","text":"valid non-NULL value number seats filled","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.nseats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter-checking method for nseats (internal) — check.nseats","text":"","code":"## TODO: port the following tests (from legacy code) into testthat 3e tests unitTestStatus <- TRUE ## appropriately default nseats, when testing stv() with five candidates    nc<-5    nseats<-NULL    nseats<-SafeVote:::check.nseats(nseats=nseats, ncandidates=nc,                                    default=floor(nc/2))    if (nseats != floor(nc/2)) {      warning(\"Unit test 1 on check.nseats() failed with nseats =\", nseats)      unitTestStatus <- FALSE    } ## appropriately default nseats, when using stv() to rank candidates     nc<-5    nseats<-NULL    nseats<-SafeVote:::check.nseats(nseats=nseats, ncandidates=nc,                                     complete.ranking=TRUE, default=nc)    if (nseats != nc) {      warning(\"Unit test 2 on check.nseats() failed with nseats =\", nseats)      unitTestStatus <- FALSE    } cat(\"Unit tests on check.seats():\", ifelse(unitTestStatus, \"Pass\", \"Fail\")) #> Unit tests on check.seats(): Pass"},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"check the validity of a partial ranking — check.ranking","title":"check the validity of a partial ranking — check.ranking","text":"check validity partial ranking","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check the validity of a partial ranking — check.ranking","text":"","code":"check.ranking(r)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check the validity of a partial ranking — check.ranking","text":"r numeric vector","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check the validity of a partial ranking — check.ranking","text":"partial ranking elements r, using ties.method=\"min\"","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.approval","title":"undocumented internal method — check.votes.approval","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.approval","text":"","code":"check.votes.approval(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.approval","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.condorcet","title":"undocumented internal method — check.votes.condorcet","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.condorcet","text":"","code":"check.votes.condorcet(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.condorcet","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.condorcet","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes","title":"undocumented internal method — check.votes","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes","text":"","code":"check.votes(x, ..., quiet = FALSE)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes","text":"x, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.plurality","title":"undocumented internal method — check.votes.plurality","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.plurality","text":"","code":"check.votes.plurality(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.plurality","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.score","title":"undocumented internal method — check.votes.score","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.score","text":"","code":"check.votes.score(record, max.score, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.score","text":"record, max.score, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.stv","title":"undocumented internal method — check.votes.stv","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.stv","text":"","code":"check.votes.stv(record, equal.ranking = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.stv","text":"record, equal.ranking, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.stv","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — check.votes.tworound.runoff","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — check.votes.tworound.runoff","text":"","code":"check.votes.tworound.runoff(record, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — check.votes.tworound.runoff","text":"record, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/check.votes.tworound.runoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — check.votes.tworound.runoff","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":null,"dir":"Reference","previous_headings":"","what":"the least upper bound on a pair of rankings — combineRankings","title":"the least upper bound on a pair of rankings — combineRankings","text":"least upper bound pair rankings","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings(r1, r2)"},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the least upper bound on a pair of rankings — combineRankings","text":"r1, r2 numeric vectors","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the least upper bound on a pair of rankings — combineRankings","text":"complete (possibly partial) ranking consistent r1 r2.  Uses ties.method=\"min\"","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/combineRankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the least upper bound on a pair of rankings — combineRankings","text":"","code":"combineRankings( c(3,1,2), c(2,1,3) ) #> [1] 2 1 2"},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":null,"dir":"Reference","previous_headings":"","what":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"internal method analyse partial results stv() ballot count, discover complete ranking candidates.  ranking may depend value nseats, affects votes transferred.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"","code":"completeRankingTable(object, quiet, verbose)"},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"object partial results quiet TRUE suppress console output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/completeRankingTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal method to analyse the partial results of an stv() ballot count,\nto discover a complete ranking of all candidates.  The ranking may depend\non the value of nseats, because this affects how votes are transferred. — completeRankingTable","text":"data.frame columns Rank, Margin, Candidate, Elected, SafeRank","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the Condorcet voting method. — condorcet","title":"Count votes using the Condorcet voting method. — condorcet","text":"Condorcet method elects candidate wins majority ranked vote every head head election candidates. Condorcet winner candidate beats candidates pairwise comparisons. Analogously, Condorcet loser candidate loses candidates. Neither Condorcet winner loser might exist.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"condorcet(   votes,   runoff = FALSE,   nseats = 1,   safety = 1,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the Condorcet voting method. — condorcet","text":"votes matrix data.frame containing votes. Rows correspond votes, columns correspond candidates. votes character string, interpreted file name votes read. See . runoff Logical. TRUE Condorcet winner exists, election goes run-, see . nseats number seats filled election safety Parameter clustering heuristic total ranking candidates.  Conjecture: default 1.0 ensures separation one s.d. clusters, votes .u.d. permutations candidates. fsep votes file name, argument gives column separator file. quiet TRUE output printed. ... Undocumented intent (preserved legacy code)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the Condorcet voting method. — condorcet","text":"Object class SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count votes using the Condorcet voting method. — condorcet","text":"runoff argument set TRUE Condorcet winner exists, two candidates pairwise wins selected method applied subset. two candidates run-, selection performed repeatedly, either winner selected selection possible. input data votes structured way stv method: Row contains preferences voter numbered 1; 2; : : : ; r; 0; 0; 0; 0, order, equal preferences allowed. columns correspond candidates. dimnames columns names candidates; supplied candidates lettered , B, C, .... dataset contains missing values (NA), replaced zeros. ballot equally-ranked candidates, rankings tested validity: preference \\(\\) duplicate, exactly \\(- 1\\) preferences \\(j\\) \\(0 < j < \\). ballot x fails validity test, automatically corrected (aka \"converted\") valid ballot using x <- rank(x, ties.method = \"min\"), warning issued. method also computes Borda ranking candidates, using tournament-style scoring.  ranking \"fuzzed\" safeRank, approximately 1 s.d. fuzz safety=1.0 voter preferences .u.d.  warning thrown safeRank violates (extended) Condorcet principle: Candidate \\(\\) highly ranked Candidate \\(j\\) majority voters agree .","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/condorcet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count votes using the Condorcet voting method. — condorcet","text":"","code":"{ data(food_election) condorcet(food_election) } #>  #> Results of Condorcet voting #> ===========================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          1 #>  #>  #> |             | Oranges| Pears| Chocolate| Strawberries| Sweets| Total| Score | BordaRank | margin| SafeRank| Winner| Loser| #> |:------------|-------:|-----:|---------:|------------:|------:|-----:|:-----:|:---------:|------:|--------:|------:|-----:| #> |Oranges      |       0|     1|         0|            0|      1|     2|  22   |     3     |      6|        2|       |      | #> |Pears        |       0|     0|         0|            0|      0|     0|   8   |     5     |     NA|        2|       |     x| #> |Chocolate    |       1|     1|         0|            1|      1|     4|  48   |     1     |     20|        1|      x|      | #> |Strawberries |       1|     1|         0|            0|      1|     3|  28   |     2     |      6|        2|       |      | #> |Sweets       |       0|     1|         0|            0|      0|     1|  16   |     4     |      8|        2|       |      | #>  #> safeRank fuzz on Borda scores: 8.944272 #> Gaps in Borda scores: min 6 mean 9.6 max 20 ; all 6 6 8 8 20 #> Condorcet winner: Chocolate #> Condorcet loser: Pears #>"},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — correct.ranking","title":"undocumented internal method — correct.ranking","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — correct.ranking","text":"","code":"correct.ranking(votes, partial = FALSE, quiet = FALSE)"},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — correct.ranking","text":"votes, partial, quiet undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/correct.ranking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — correct.ranking","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":".print method for summary object — .print.summary.SafeVote","title":".print method for summary object — .print.summary.SafeVote","text":".print method summary object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".print method for summary object — .print.summary.SafeVote","text":"","code":".print.summary.SafeVote(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".print method for summary object — .print.summary.SafeVote","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-print.summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".print method for summary object — .print.summary.SafeVote","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":null,"dir":"Reference","previous_headings":"","what":"summarises vote-totals for subsequent printing — .summary.SafeVote","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"summarises vote-totals subsequent printing","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"","code":".summary.SafeVote(object, larger.wins = TRUE, reorder = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"object vector total votes per candidate larger.wins TRUE candidates \"voted \" rather voted-reorder TRUE output data.frame columns rank-order","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dot-summary.SafeVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarises vote-totals for subsequent printing — .summary.SafeVote","text":"data.frame three columns nc+1 rows, nc number candidates.  first column contains candidate names final entry named \"Sum\".  second column contains vote totals. third column vector chars indicate whether candidate elected.  data.frame four named attributes carrying election parameters. TODO: refactor modern dialect R, perhaps defining constructor election_info S3 object summary method print method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":null,"dir":"Reference","previous_headings":"","what":"Dublin West — dublin_west","title":"Dublin West — dublin_west","text":"Dataset containing ranked votes Dublin West constituency 2002, Ireland. Results STV election can viewed https://en.wikipedia.org/wiki/Dublin_West#2002_general_election.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dublin West — dublin_west","text":"","code":"data(dublin_west)"},{"path":"https://cthombor.github.io/SafeVote/reference/dublin_west.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dublin West — dublin_west","text":"data frame 29988 observations 9 candidates. record corresponds one ballot candidates ranked 1 9 zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":null,"dir":"Reference","previous_headings":"","what":"prints the basic results of an election — election.info","title":"prints the basic results of an election — election.info","text":"prints basic results election","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prints the basic results of an election — election.info","text":"","code":"election.info(x)"},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prints the basic results of an election — election.info","text":"x basic election results, named attributes R structure object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/election.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prints the basic results of an election — election.info","text":"data.frame : invisible copy printed results TODO: refactor modern dialect R, e.g. defining constructor election_info S3 object print method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractMargins.html","id":null,"dir":"Reference","previous_headings":"","what":"extract margins from the results of a ballot count — extractMargins","title":"extract margins from the results of a ballot count — extractMargins","text":"extract margins results ballot count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractMargins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract margins from the results of a ballot count — extractMargins","text":"","code":"extractMargins(marginNames, rankMethod, cr)"},{"path":"https://cthombor.github.io/SafeVote/reference/extractMargins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract margins from the results of a ballot count — extractMargins","text":"marginNames list colnames margins SafeRank result rankMethod \"safeRank\", margins adjusted appropriately cr structure returned ballot-counting method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractMargins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract margins from the results of a ballot count — extractMargins","text":"named list margins","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a ranking vector by name from the results of a ballot count — extractRank","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"Extract ranking vector name results ballot count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"","code":"extractRank(rankMethod, countMethod, cr)"},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"rankMethod e.g. \"elected\" countMethod e.g. \"stv\" cr structure returned ballot-counting method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/extractRank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a ranking vector by name from the results of a ballot count — extractRank","text":"numeric ranking vector, order colnames(cr$data)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":null,"dir":"Reference","previous_headings":"","what":"Food Election — food_election","title":"Food Election — food_election","text":"Sample data testing SafeVote","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Food Election — food_election","text":"","code":"data(food_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/food_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Food Election — food_election","text":"data frame 20 observations 5 candidates (Oranges, Pears, Chocolate, Strawberries, Sweets). record corresponds one ballot ranking candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — forwards.tiebreak","title":"Undocumented internal method — forwards.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — forwards.tiebreak","text":"","code":"forwards.tiebreak(prefs, icans, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/forwards.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — forwards.tiebreak","text":"prefs undocumented icans undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"image function visualizes joint distribution two preferences (.pref=FALSE) given xpref ypref, well marginal distribution preferences (.pref=TRUE). joint distribution can shown proportions (proportion=TRUE) raw vote counts (proportion=FALSE).","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet image(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The image function visualizes the joint distribution of two preferences\n(if all.pref=FALSE) given xpref and ypref, as well as the marginal\ndistribution of all preferences (if all.pref=TRUE). The joint distribution\ncan be shown as proportions (if proportion=TRUE) or raw vote counts\n(if proportion=FALSE). — image.SafeVote.condorcet","text":"x object type SafeVote.condorcet ... See arguments image.SafeVote.stv, especially xpref, ypref, .pref proportion.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"image() method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv image(x, xpref = 2, ypref = 1, all.pref = FALSE, proportion = TRUE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"x, xpref, ypref, .pref, proportion undocumented (legacy code) ... args passed fields::image.plot()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/image.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"image() method for the result of an stv() ballot-count — image.SafeVote.stv","text":"image object, side-effect RStudio Plots pane","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Approval — ims_approval","title":"IMS Approval — ims_approval","text":"Modified version ims_election, use approval voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Approval — ims_approval","text":"","code":"data(ims_approval)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_approval.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Approval — ims_approval","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, 0 indicating disapproval candidate 1 indicating approval.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Election — ims_election","title":"IMS Election — ims_election","text":"Datasets containing anonymized votes past Council election Institute Mathematical Statistics (IMS). dataset ims_election original dataset used single transferable vote, candidate names changed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Election — ims_election","text":"","code":"data(ims_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_election.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Election — ims_election","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot. IMS Council voting done using STV method, thus ims_election dataset contains ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Plurality — ims_plurality","title":"IMS Plurality — ims_plurality","text":"Modified version ims_election, use plurality voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Plurality — ims_plurality","text":"","code":"data(ims_plurality)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_plurality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Plurality — ims_plurality","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, 1 voter's -preferred candidate 0 candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS Score — ims_score","title":"IMS Score — ims_score","text":"Modified version ims_election, use score voting.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS Score — ims_score","text":"","code":"data(ims_score)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_score.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS Score — ims_score","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot, higher values indicating -preferred candidates.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":null,"dir":"Reference","previous_headings":"","what":"IMS STV — ims_stv","title":"IMS STV — ims_stv","text":"Copy ims_election, included backwards compatibility.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMS STV — ims_stv","text":"","code":"data(ims_election)"},{"path":"https://cthombor.github.io/SafeVote/reference/ims_stv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMS STV — ims_stv","text":"data frame 620 observations 10 candidates (names made ). record corresponds one ballot. IMS Council voting done using STV method, thus ims_election dataset contains ballots candidates ranked 1 10 zeros allowed.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"is.SafeRankExpt() — is.SafeRankExpt","title":"is.SafeRankExpt() — is.SafeRankExpt","text":".SafeRankExpt()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"","code":"is.SafeRankExpt(x)"},{"path":"https://cthombor.github.io/SafeVote/reference/is.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"x object unknown class","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is.SafeRankExpt() — is.SafeRankExpt","text":"TRUE x valid SafeRankExpt object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — is.valid.vote","title":"undocumented internal method — is.valid.vote","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — is.valid.vote","text":"","code":"is.valid.vote(x, method, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — is.valid.vote","text":"x, method, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/is.valid.vote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — is.valid.vote","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a loser and their margin of victory — loserMargin","title":"Find a loser and their margin of victory — loserMargin","text":"Find loser margin victory","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a loser and their margin of victory — loserMargin","text":"","code":"loserMargin(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a loser and their margin of victory — loserMargin","text":"votes cleaned ballots","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/loserMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a loser and their margin of victory — loserMargin","text":"length-2 vector: index losing candidate, margin loss (0 tie, NA winners)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"Constructor results SafeRank experiment","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"","code":"new_SafeRankExpt(   rankNames = list(),   marginNames = list(),   countMethod = character(0),   rankMethod = character(0),   datasetName = character(0),   experimentalMethod = character(0),   countArgs = list(),   nseats = integer(0),   otherFactors = list(),   unitFactors = list() )"},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"rankNames colnames per-candidate ranks marginNames colnames per-candidate margins countMethod secondary factor: counting method e.g. \"stv\" rankMethod secondary factor: ranking method e.g. \"elected\" datasetName secondary factor: name dataset ballots experimentalMethod secondary factor: name method simulated elections e.g. \"testFraction\" countArgs secondary factor: args passed countMethod nseats secondary factor: number seats filled otherFactors secondary factors, e.g. parameters experimentalMethod unitFactors per-unit factors derived PRNG experimental harness, e.g describing ballots randomly deleted testDeletions","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/new_SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the results of a SafeRank experiment — new_SafeRankExpt","text":"object class SafeRankExpt","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.preferences","title":"Undocumented internal method — ordered.preferences","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.preferences","text":"","code":"ordered.preferences(vmat)"},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.preferences","text":"vmat undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method — ordered.tiebreak","title":"Undocumented internal method — ordered.tiebreak","text":"Undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method — ordered.tiebreak","text":"","code":"ordered.tiebreak(vmat, seed = NULL)"},{"path":"https://cthombor.github.io/SafeVote/reference/ordered.tiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method — ordered.tiebreak","text":"vmat undocumented seed undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"\"adjusted rank\" candidate ranking \\(r\\) plus scaled \"winning margin\". scaled margin \\(e^{-cx/\\sqrt{n}}\\), \\(x\\) adjusted margin (.e. number votes candidate ahead next-weaker candidate, adjusted number ballots \\(n\\) number seats \\(s\\)), \\(c>0\\) margin-scaling parameter cMargin.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt plot(   x,   facetWrap = FALSE,   anBallots = 0,   cMargin = 1,   xlab = \"Ballots\",   ylab = \"Adjusted Rank\",   title = NULL,   subtitle = \"(default)\",   line = TRUE,   pointSize = 1,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"x object containing experimental results facetWrap TRUE provides per-candidate scatterplots anBallots, cMargin parameters rank-adjustment formula xlab, ylab axis labels title overall title plot.  Default: NULL subtitle subtitle plot.  Default: value nSeats non-zero rank-adjustment parameters line TRUE connect points lines, disable jitter pointSize diameter points ... params generic plot()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"graphics object, side-effect RStudio Plots pane","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeRankExpt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot() method for the result of an experiment with varying numbers of ballots — plot.SafeRankExpt","text":"default value cMargin=1.0 draws visual attention candidates small winning margin, adjusted rank near \\(r+1\\).  Candidates anything small winning margin small rank adjustment, due exponential scaling. scaling linear \\(s/n\\) applied margins anBallots>0.  linear scaling may helpful way visualise winning margins STV elections margin victory elected candidate typically much larger quota \\(n/(s+1)\\) (Droop) \\(n/s\\) (Hare). linear scaling factor \\(/n\\), \\(\\) value anBallots, \\(s\\) number seats, \\(n\\) number ballots. plotting (inverted) adjusted rank scale, linearly-scaled margin added candidate's rank.  Note linearly-scaled margins zero \\(=0\\), thus effect adjusted rank.  might want increase value anBallots, starting 1.0, winning candidate's adjusted rank 1.0 ballots counted, confirm adjusted ranks candidates still congruent ranking (.e. rank-adjustment less 1 cases except perhaps initial transient small numbers ballots). anBallots cMargins non-zero, ranks adjusted exponentially-scaled margins linearly-scaled margins. resulting plot difficult interpret valid way. Todo: Accept list SafeVoteExpt objects. Todo: Multiple counts number ballots summarised box--whisker graphic, rather set jittered points. Todo: Consider developing linear scaling appropriate plotting stochastic experimental data derived Condorcet elections.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"plot() method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv plot(x, xlab = \"Count\", ylab = \"Preferences\", point.size = 2, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"x stv results xlab, ylab axis labels point.size diameter elected/eliminated points ... params generic plot()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plot.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot() method for the result of an stv() ballot-count — plot.SafeVote.stv","text":"graphics object, side-effect RStudio's Plots pane","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the plurality method — plurality","title":"Count votes using the plurality method — plurality","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the plurality method — plurality","text":"","code":"plurality(votes, nseats = 1, fsep = \"\\t\", quiet = FALSE, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the plurality method — plurality","text":"votes, nseats, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the plurality method — plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce input 'data' into a matrix — prepare.votes","title":"Coerce input 'data' into a matrix — prepare.votes","text":"Coerce input 'data' matrix","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce input 'data' into a matrix — prepare.votes","text":"","code":"prepare.votes(data, fsep = \"\\n\")"},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce input 'data' into a matrix — prepare.votes","text":"data possibly .csv file, possibly R object fsep separation character .csv e.g. tab comma","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/prepare.votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce input 'data' into a matrix — prepare.votes","text":"matrix one row per ballot, one column per candidate, named rows columns","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"Print method summary.SafeRankExpt","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"","code":"# S3 method for summary.SafeRankExpt print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"x experimental results ... args generic print()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for summary.SafeRankExpt — print.summary.SafeRankExpt","text":"invisible(x), side-effects console","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary object — print.summary.SafeVote.approval","title":"print method for summary object — print.summary.SafeVote.approval","text":"print method summary object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary object — print.summary.SafeVote.approval","text":"","code":"# S3 method for summary.SafeVote.approval print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary object — print.summary.SafeVote.approval","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary object — print.summary.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"print method summary.SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"","code":"# S3 method for summary.SafeVote.condorcet print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"x object type summary.SafeVote.condorcet ... parameters passed generic print","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.SafeVote.condorcet — print.summary.SafeVote.condorcet","text":"textual description x","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary of plurality object — print.summary.SafeVote.plurality","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"print method summary plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"","code":"# S3 method for summary.SafeVote.plurality print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary of plurality object — print.summary.SafeVote.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for summary.score object — print.summary.SafeVote.score","title":"print method for summary.score object — print.summary.SafeVote.score","text":"print method summary.score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for summary.score object — print.summary.SafeVote.score","text":"","code":"# S3 method for summary.SafeVote.score print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for summary.score object — print.summary.SafeVote.score","text":"x, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print method for summary.score object — print.summary.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"print() method summary() SafeVote result","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"","code":"# S3 method for summary.SafeVote.stv print(x, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/print.summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print() method for a summary() of a SafeVote result — print.summary.SafeVote.stv","text":"x election results ... args passed kable()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/rbind.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"add row SafeRankExpt object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/rbind.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt rbind(object, row)"},{"path":"https://cthombor.github.io/SafeVote/reference/rbind.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"object prior results experimentation row new observations","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/rbind.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add a row to a SafeRankExpt object — rbind.SafeRankExpt","text":"SafeRankExpt object additional row","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":null,"dir":"Reference","previous_headings":"","what":"undocumented internal method — remove.candidate","title":"undocumented internal method — remove.candidate","text":"undocumented internal method","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undocumented internal method — remove.candidate","text":"","code":"remove.candidate(votes, can, quiet = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"undocumented internal method — remove.candidate","text":"votes, can, quiet undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/remove.candidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"undocumented internal method — remove.candidate","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":null,"dir":"Reference","previous_headings":"","what":"Count votes using the score (or range) method. — score","title":"Count votes using the score (or range) method. — score","text":"See https://arxiv.org/abs/2102.05801","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count votes using the score (or range) method. — score","text":"","code":"score(   votes,   nseats = 1,   max.score = NULL,   larger.wins = TRUE,   fsep = \"\\t\",   quiet = FALSE,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count votes using the score (or range) method. — score","text":"votes, nseats, max.score, larger.wins, fsep, quiet, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count votes using the score (or range) method. — score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"Undocumented internal method, renamed 'solve.tiebreak' avoid confusion generic solve()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"","code":"solveTiebreak(method, prefs, icans, ordered.ranking = NULL, elim = TRUE)"},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"method undocumented prefs undocumented icans undocumented ordered.ranking undocumented elim undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/solveTiebreak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method, renamed from 'solve.tiebreak' to avoid\nconfusion with generic solve() — solveTiebreak","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":null,"dir":"Reference","previous_headings":"","what":"Count preferential ballots using an STV method — stv","title":"Count preferential ballots using an STV method — stv","text":"votes parameter described Details condorcet() following additional semantics. ballot fails rank candidates, informal (.e. \"invalid\") unless invalid.partial=FALSE. ballot equally-ranked candidates, informal unless equal.preferences=TRUE. Informal ballots removed ballot box counting, warning issued, ballots","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count preferential ballots using an STV method — stv","text":"","code":"stv(   votes,   nseats = NULL,   eps = 0.001,   equal.ranking = FALSE,   fsep = \"\\t\",   ties = c(\"f\", \"b\"),   constant.quota = FALSE,   quota.hare = FALSE,   group.nseats = NULL,   group.members = NULL,   complete.ranking = FALSE,   invalid.partial = FALSE,   verbose = FALSE,   seed = NULL,   quiet = FALSE,   digits = 3,   backwards.compatible = FALSE,   safety = 1,   ... )"},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count preferential ballots using an STV method — stv","text":"votes array one column per candidate one row per ballot, described Details condorcet() nseats number seats filled election eps fuzz-factor comparing fractional votes equal.ranking = FALSE, fsep column-separator output ties vector tie-breaking methods: 'f' forward, 'b' backward constant.quota TRUE quota held constant.  -rides quota.hare. Default FALSE. quota.hare TRUE Hare quota, FALSE Droop quota (default) group.nseats number seats reserved members group, Church England's STV methodology. group.members vector members group reserved seats complete.ranking TRUE (default) complete ranking candidates produced.  parameter affects value assigned nseats stv() called nseats=NULL, effect elections nseats explicitly specified. invalid.partial TRUE ballots specify complete ranking candidates informal (aka \"invalid\") .e. ignored (warning).  Default FALSE. verbose TRUE diagnostic output seed integer seed tie-breaking.  Warning: non-NULL, PRNG R reseeded prior every random tie-break among possibly-elected candidates.  preserved functionality branch allow regression legacy codebase vote_2.3.2. SafeVote default value seed NULL rather legacy value 1234, mitigate validity hazard PRNG reseedings stochastic experiment. quiet TRUE suppress console output digits number significant digits output table backwards.compatible TRUE regress vote2_3.2 disabling $margins, $fuzz, $rankingTable, $safeRank safety number standard deviations vote-counts, producing safeRank clustering near-ties complete ranking ... undocumented intent (preserved legacy code)","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count preferential ballots using an STV method — stv","text":"object class vote.stv.  Note: winning margins object valid elected candidates (total) ranking, must adjusted within tiegroups valid candidates' (possibly partial) safeRank.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/stv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count preferential ballots using an STV method — stv","text":"","code":"data(food_election) stv(food_election, safety = 0.0) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          2 #> Number of unfilled seats: 0 #>  #> Fuzz on safeRank:\t 0 #> Complete ranking: #>  #> |             | Rank|SafeRank |  Margin   | #> |:------------|----:|:--------|:---------:| #> |Oranges      |    2|2        | 1.4451111 | #> |Pears        |    5|5        | 2.0000000 | #> |Chocolate    |    1|1        | 8.0000000 | #> |Strawberries |    3|3        | 1.7774444 | #> |Sweets       |    4|4        | 0.7774444 | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|     2| 3-trans|      3| 4-trans|       4| #> |:------------|---------:|-------:|-----:|-------:|------:|-------:|-------:| #> |Oranges      |     4.000|   0.000| 4.000|       2|  6.000|   0.000|   6.000| #> |Pears        |     2.000|   0.000| 2.000|      -2|       |        |        | #> |Chocolate    |    12.000|  -5.332|      |        |       |        |        | #> |Strawberries |     1.000|   3.555| 4.555|       0|  4.555|   0.000|   4.555| #> |Sweets       |     1.000|   1.777| 2.777|       0|  2.777|  -2.777|        | #> |Tie-breaks   |          |        |      |        |       |        |        | #> |Elected      | Chocolate|        |      |        |       |        | Oranges| #> |Eliminated   |          |        | Pears|        | Sweets|        |        | #>  #> Elected: Chocolate, Oranges  #>  stv(food_election, nseats = 2) #>  #> Results of Single transferable vote #> ===================================                            #> Number of valid votes:   20 #> Number of invalid votes:  0 #> Number of candidates:     5 #> Number of seats:          2 #> Number of unfilled seats: 0 #>  #> Fuzz on safeRank:\t 4.472136 #> Complete ranking: #>  #> |             | Rank|SafeRank |  Margin   | #> |:------------|----:|:--------|:---------:| #> |Oranges      |    2|2        | 1.4451111 | #> |Pears        |    5|2        | 2.0000000 | #> |Chocolate    |    1|1        | 8.0000000 | #> |Strawberries |    3|2        | 1.7774444 | #> |Sweets       |    4|2        | 0.7774444 | #>  #> Vote transfers: #>  #> |             |         1| 2-trans|     2| 3-trans|      3| 4-trans|       4| #> |:------------|---------:|-------:|-----:|-------:|------:|-------:|-------:| #> |Oranges      |     4.000|   0.000| 4.000|       2|  6.000|   0.000|   6.000| #> |Pears        |     2.000|   0.000| 2.000|      -2|       |        |        | #> |Chocolate    |    12.000|  -5.332|      |        |       |        |        | #> |Strawberries |     1.000|   3.555| 4.555|       0|  4.555|   0.000|   4.555| #> |Sweets       |     1.000|   1.777| 2.777|       0|  2.777|  -2.777|        | #> |Tie-breaks   |          |        |      |        |       |        |        | #> |Elected      | Chocolate|        |      |        |       |        | Oranges| #> |Eliminated   |          |        | Pears|        | Sweets|        |        | #>  #> Elected: Chocolate, Oranges  #>"},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":null,"dir":"Reference","previous_headings":"","what":"internal method, computes column-sums — sumOfVotes","title":"internal method, computes column-sums — sumOfVotes","text":"Renamed 'sum.votes' avoid confusion generic sum()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal method, computes column-sums — sumOfVotes","text":"","code":"sumOfVotes(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal method, computes column-sums — sumOfVotes","text":"votes ballots rows, candidates columns","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/sumOfVotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal method, computes column-sums — sumOfVotes","text":"vector votes candidate","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeRankExpt.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for SafeRankExpt — summary.SafeRankExpt","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"summary method SafeRankExpt","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeRankExpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"","code":"# S3 method for SafeRankExpt summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeRankExpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"object experimental results summarised ... args generic summary()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeRankExpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for SafeRankExpt — summary.SafeRankExpt","text":"summary.SafeRankExpt object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for approval results — summary.SafeVote.approval","title":"summary method for approval results — summary.SafeVote.approval","text":"summary method approval results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for approval results — summary.SafeVote.approval","text":"","code":"# S3 method for SafeVote.approval summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for approval results — summary.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for approval results — summary.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for condorcet() results — summary.SafeVote.condorcet","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"Summary method condorcet() results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"object type SafeVote.condorcet ... undocumented, currently unused","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for condorcet() results — summary.SafeVote.condorcet","text":"data.frame object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for plurality object — summary.SafeVote.plurality","title":"summary method for plurality object — summary.SafeVote.plurality","text":"summary method plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for plurality object — summary.SafeVote.plurality","text":"","code":"# S3 method for SafeVote.plurality summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for plurality object — summary.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for plurality object — summary.SafeVote.plurality","text":"descriptive dataframe","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"summary method for score object — summary.SafeVote.score","title":"summary method for score object — summary.SafeVote.score","text":"summary method score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary method for score object — summary.SafeVote.score","text":"","code":"# S3 method for SafeVote.score summary(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary method for score object — summary.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary method for score object — summary.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"summary() method for a SafeVote result — summary.SafeVote.stv","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"summary() method SafeVote result","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv summary(object, ..., digits = 3)"},{"path":"https://cthombor.github.io/SafeVote/reference/summary.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary() method for a SafeVote result — summary.SafeVote.stv","text":"object undocumented ... undocumented digits undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the sensitivity of a result to tactical voting. — testAdditions","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"Ballots added specified number simulated elections (arep) held.   favoured candidate specified, ballot-box stuffed ballots awarding first-preference candidate. Alternatively, tacticalBallot may specified.  favoured tacticalBallot NULL, random candidate selected favoured one.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"testAdditions(   votes,   ainc = 1,   arep = NULL,   favoured = NULL,   tacticalBallot = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = list(),   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"votes set ballots, vote_2.3.2 ainc Number ballots added step arep Maximum number ballot-stuffed elections run favoured Name candidate \"plumped\".  NULL, random candidate selected among candidates initially top-ranked. candidates fully-ranked random, identical ballot paper stuffed multiple times.  integer value favoured interpreted index candidate names. tacticalBallot ballot paper .e. vector length ncol(ballots). argument non-NULL, takes precedence favoured ballot box stuffed. rankMethod Name ranking attribute output countMethod countMethod name function count ballots countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"matrix experimental results, dimension \\(n\\) \\(2m+1\\), \\(n\\) number elections \\(m\\) number candidates.  first column named \"nBallots\".  columns indicate ranking eponymous candidate, margin next-lower-ranked candidate.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testAdditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the sensitivity of a result to tactical voting. — testAdditions","text":"","code":"data(food_election)  testAdditions(food_election, arep = 2, favoured = \"Strawberries\",    countArgs = list(safety = 0)) #>  #> Adding up to 2 stv ballots = ( 2 4 3 1 5 ) #> Testing progress:  1, 2 #>  #> Results of testAdditions at 2022-12-28 05:23:52 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | safety| #> |:---------|------:| #> |countArgs |      0| #>  #>  #> |             | ainc| arep|                                                         tacticalBallot| #> |:------------|----:|----:|----------------------------------------------------------------------:| #> |otherFactors |    1|    2| c(Oranges = 2, Pears = 4, Chocolate = 3, Strawberries = 1, Sweets = 5)| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|---------:| #> |XGN0   |       20|       2|     5|         1|            3|      4| 1.4451111|       2|           8|      1.7774444| 0.7774444| #> |XGN1   |       21|       2|     5|         1|            3|      4| 0.6673333|       2|           8|      2.6663333| 0.6663333| #> |XGN2   |       22|       3|     5|         1|            2|      4| 3.4447778|       2|           8|      0.1104444| 0.5552222|"},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the safety of a preliminary result for an election — testDeletions","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"Ballots deleted random ballot-box, election results computed per dinc ballot-deletions.  experiment terminates specified number ballots deleted, specified number ballot-counts occurred.  Note: ballot-counts correlated.  Use testFraction() experiment independently-drawn samples ballot-box.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"testDeletions(   votes,   countMethod = \"stv\",   countArgs = list(),   dstart = NULL,   dinc = NULL,   dlimit = NULL,   drep = NULL,   rankMethod = \"safeRank\",   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"votes set ballots, vote_2.3.2 countMethod name function count ballots countArgs List args passed countMethod (addition votes) dstart Number ballots first ballot-count (selected random votes, without replacement) dinc Number ballots deleted subsequent steps dlimit Maximum number ballots delete (addition dstart) drep Maximum number elections (required dinc=0) rankMethod Name ranking attribute output countMethod exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"SafeRankExpt object, describing experiment results","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testDeletions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess the safety of a preliminary result for an election — testDeletions","text":"","code":"data(food_election) testDeletions(food_election) #> Number of ballots counted by stv: #>   20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Results of testDeletions at 2022-12-28 05:23:52 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |             | dstart| dinc| dlimit| drep| #> |:------------|------:|----:|------:|----:| #> |otherFactors |     20|    2|      2|   10| #>  #> Unit factors: initSample, removedBallots #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges|   m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|---------:|-----------:|--------------:|---------:| #> |PHF0   |       20|       2|     2|         1|            2|      2| 0.7774444| 1.7774444|           8|      2.0000000| 1.4451111| #> |PHF1   |       18|       2|     2|         1|            2|      2| 1.3633636| 2.0000000|           7|      0.6366364| 1.3643636| #> |PHF2   |       16|       2|     2|         1|            2|      2| 0.9331333| 1.0000000|           7|      1.0668667| 0.2674667| #> |PHF3   |       14|       2|     2|         1|            2|      2| 0.8330833| 1.0000000|           5|      1.1669167| 1.5007500| #> |PHF4   |       12|       1|     1|         1|            1|      1| 0.6663333| 0.3326667|           3|      1.3336667| 2.6673333| #> |PHF5   |       10|       1|     1|         1|            1|      1| 0.3328333| 1.0000000|           1|      0.6671667| 1.0000000| #> |PHF6   |        8|       1|     1|         1|            1|      1| 0.6661667| 0.6661667|           2|      0.3338333| 0.3338333| #> |PHF7   |        6|       1|     1|         1|            1|      1| 0.3330000| 0.0000000|           2|      0.6670000| 0.3340000| #> |PHF8   |        4|       2|     2|         1|            2|      2| 0.5552222| 1.5552222|           2|      0.0000000| 0.0000000| #> |PHF9   |        2|       2|     2|         1|            2|      2| 0.6661667| 0.0000000|           2|      0.0000000| 0.0000000| testDeletions(food_election, countMethod=\"stv\",   countArgs=list(complete.ranking=TRUE)) #> Number of ballots counted by stv: #>   20, 18, 16, 14, 12, 10, 8, 6, 4, 2 #>  #> Results of testDeletions at 2022-12-28 05:23:52 #>  #> Dataset = food_election, countMethod = stv, rankMethod = safeRank #>  #> |          | complete.ranking| #> |:---------|----------------:| #> |countArgs |             TRUE| #>  #>  #> |             | dstart| dinc| dlimit| drep| #> |:------------|------:|----:|------:|----:| #> |otherFactors |     20|    2|      2|   10| #>  #> Unit factors: initSample, removedBallots #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges|   m.Pears| m.Chocolate| m.Strawberries|  m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|---------:|-----------:|--------------:|---------:| #> |VFF0   |       20|       2|     2|         1|            2|      2| 1.8885556| 2.7771111|           8|              2| 0.1114444| #> |VFF1   |       18|       2|     2|         1|            2|      2| 2.9087273| 2.0902727|           7|              1| 0.0912727| #> |VFF2   |       16|       2|     2|         1|            2|      2| 2.1107778| 1.2215556|           5|              1| 0.8892222| #> |VFF3   |       14|       2|     2|         1|            2|      2| 0.1246250| 1.4164167|           5|              1| 2.0000000| #> |VFF4   |       12|       1|     1|         1|            1|      1| 1.3330000| 0.6660000|           3|              1| 0.6670000| #> |VFF5   |       10|       1|     1|         1|            1|      1| 0.3329333| 0.6664667|           3|              1| 1.0000000| #> |VFF6   |        8|       2|     2|         1|            2|      2| 1.4662667| 0.7331333|           4|              0| 1.0000000| #> |VFF7   |        6|       1|     1|         1|            1|      1| 0.6663333| 0.6663333|           2|              0| 1.0000000| #> |VFF8   |        4|       1|     1|         1|            1|      1| 1.0000000| 1.3323333|           1|              0| 0.0000000| #> |VFF9   |        2|       1|     1|         1|            1|      1| 0.0000000| 0.0000000|           1|              0| 0.0000000|"},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"Starting number (astart) randomly-selected ballots, increasingly-large collection randomly-selected ballots counted. ballots chosen independently without replacement experimental unit; want count decreasingly-sized portions single sample ballots, use testDeletions().","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"","code":"testFraction(   votes = NULL,   astart = NULL,   ainc = NULL,   arep = NULL,   trep = NULL,   rankMethod = \"safeRank\",   countMethod = \"stv\",   countArgs = list(),   exptName = NULL,   quiet = FALSE,   verbose = FALSE )"},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"votes numeric matrix: one row per ballot, one column per candidate astart Starting number ballots (min 2) ainc Number ballots added step. Must non-negative. arep Number repetitions test step. Required non-NULL ainc=0 && .null(trep)`. trep Limit total number simulated elections. Required non-NULL ainc=0 && .null(arep). rankMethod Name ranking attribute output countMethod, e.g. \"elected\", \"ranking\", \"safeRank\". countMethod name function count ballots, e.g. \"stv\", \"condorcet\" countArgs List args passed countMethod (addition votes) exptName stem-name experimental units e.g. \"E\".  NULL, 3-character string capital letters chosen random. quiet TRUE suppress output verbose TRUE produce diagnostic output","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"SafeRankExpt object experimental results.","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/testFraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapping experiment, with fractional counts of a ballot box. — testFraction","text":"","code":"data(food_election) testFraction(food_election, countMethod=\"condorcet\",              countArgs=list(safety=0.5,complete.ranking=TRUE)) #> Progress in counting condorcet ballots: #>  10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100% #>  #> Results of testFraction at 2022-12-28 05:23:53 #>  #> Dataset = food_election, countMethod = condorcet, rankMethod = safeRank #>  #> |          | safety| complete.ranking| #> |:---------|------:|----------------:| #> |countArgs |    0.5|             TRUE| #>  #>  #> |             | astart| ainc| arep| #> |:------------|------:|----:|----:| #> |otherFactors |      2|    2|    1| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Oranges| Pears| Chocolate| Strawberries| Sweets| m.Oranges| m.Pears| m.Chocolate| m.Strawberries| m.Sweets| #> |:------|--------:|-------:|-----:|---------:|------------:|------:|---------:|-------:|-----------:|--------------:|--------:| #> |JON1   |        2|       1|     1|         1|            1|      5|         3|       1|           1|              3|         | #> |JON2   |        4|       1|     4|         1|            3|      4|         2|        |           2|              6|         | #> |JON3   |        6|       3|     3|         1|            2|      3|         2|       1|           6|              4|         | #> |JON4   |        8|       2|     5|         1|            2|      4|         4|        |           4|              2|        6| #> |JON5   |       10|       1|     3|         1|            3|      3|         6|        |           2|              2|        2| #> |JON6   |       12|       4|     4|         1|            2|      3|          |       3|          17|              7|        5| #> |JON7   |       14|       1|     4|         1|            1|      4|        11|        |           2|              3|        1| #> |JON8   |       16|       3|     4|         1|            2|      4|         9|       1|          15|              7|         | #> |JON9   |       18|       2|     5|         1|            2|      4|         3|        |          15|              9|        5| #> |JON10  |       20|       3|     5|         1|            2|      4|         6|        |          20|              6|        8| testFraction(dublin_west, astart=20, ainc=10, arep=2, trep=3,               countMethod=\"stv\", rankMethod=\"elected\", quiet=FALSE) #> Progress in counting stv ballots: #>  33.3%, 66.7%, 100% #>  #> Results of testFraction at 2022-12-28 05:23:53 #>  #> Dataset = dublin_west, countMethod = stv, rankMethod = elected #>  #> |             | astart| ainc| arep| #> |:------------|------:|----:|----:| #> |otherFactors |     20|   10|    2| #>  #> Experiment ID, number of ballots in simulated election, ranks, winning margins: #>  #> |exptID | nBallots| Bonnie| Burton| Ryan| Higgins| Lenihan| McDonald| Morrissey| Smyth| Terry| m.Bonnie|  m.Burton|    m.Ryan| m.Higgins| m.Lenihan| m.McDonald| m.Morrissey| m.Smyth|  m.Terry| #> |:------|--------:|------:|------:|----:|-------:|-------:|--------:|---------:|-----:|-----:|--------:|---------:|---------:|---------:|---------:|----------:|-----------:|-------:|--------:| #> |MQV1   |       20|      1|      2|    1|       2|       2|        1|         2|     1|     1|  1.00000| 0.7193091| 0.6596885|  1.000000|         1|   0.399600|   0.7883542| 0.00000| 0.000000| #> |MQV2   |       30|      1|      1|    2|       2|       2|        1|         1|     1|     2|  0.39990| 1.2856165| 1.5707330|  3.800300|         2|   1.462401|   0.7143180| 0.00000| 1.556107| #> |MQV3   |       20|      1|      1|    2|       2|       2|        1|         1|     1|     2|  0.80019| 0.5276808| 1.3994450|  1.500375|         4|   0.699685|   0.0000000| 0.19981| 2.059220|"},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":null,"dir":"Reference","previous_headings":"","what":"Undocumented internal method from original code — translate.ties","title":"Undocumented internal method from original code — translate.ties","text":"Undocumented internal method original code","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undocumented internal method from original code — translate.ties","text":"","code":"translate.ties(ties, method)"},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undocumented internal method from original code — translate.ties","text":"ties undocumented method 'f' forward, 'b' backward","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/translate.ties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undocumented internal method from original code — translate.ties","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for approval object — view.SafeVote.approval","title":"view method for approval object — view.SafeVote.approval","text":"view method approval object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for approval object — view.SafeVote.approval","text":"","code":"# S3 method for SafeVote.approval view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for approval object — view.SafeVote.approval","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.approval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for approval object — view.SafeVote.approval","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for SafeVote.condorcet — view.SafeVote.condorcet","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view method SafeVote.condorcet","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"","code":"# S3 method for SafeVote.condorcet view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"object type SafeVote.condorcet ... see view.SafeVote.approval","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.condorcet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for SafeVote.condorcet — view.SafeVote.condorcet","text":"view object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for plurality object — view.SafeVote.plurality","title":"view method for plurality object — view.SafeVote.plurality","text":"view method plurality object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for plurality object — view.SafeVote.plurality","text":"","code":"# S3 method for SafeVote.plurality view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for plurality object — view.SafeVote.plurality","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.plurality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for plurality object — view.SafeVote.plurality","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for score object — view.SafeVote.score","title":"view method for score object — view.SafeVote.score","text":"view method score object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for score object — view.SafeVote.score","text":"","code":"# S3 method for SafeVote.score view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for score object — view.SafeVote.score","text":"object, ... undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for score object — view.SafeVote.score","text":"undocumented","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":null,"dir":"Reference","previous_headings":"","what":"view method for the result of an stv() ballot-count — view.SafeVote.stv","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"view method result stv() ballot-count","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"","code":"# S3 method for SafeVote.stv view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"object object viewed ... additional parameters, passed formattable::formattable()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.SafeVote.stv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view method for the result of an stv() ballot-count — view.SafeVote.stv","text":"html-formatted object","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.html","id":null,"dir":"Reference","previous_headings":"","what":"generic view() for classes defined in this package — view","title":"generic view() for classes defined in this package — view","text":"generic view() classes defined package","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic view() for classes defined in this package — view","text":"","code":"view(object, ...)"},{"path":"https://cthombor.github.io/SafeVote/reference/view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic view() for classes defined in this package — view","text":"object election object viewed ... additional parameters, passed formattable::formattable()","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic view() for classes defined in this package — view","text":"html-formatted object, side-effect RStudio's Viewer pane","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a winner and their margin of victory — winnerMargin","title":"Find a winner and their margin of victory — winnerMargin","text":"Find winner margin victory","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a winner and their margin of victory — winnerMargin","text":"","code":"winnerMargin(votes)"},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a winner and their margin of victory — winnerMargin","text":"votes cleaned ballots","code":""},{"path":"https://cthombor.github.io/SafeVote/reference/winnerMargin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a winner and their margin of victory — winnerMargin","text":"length-2 vector: index winning candidate, margin victory (0 tie, NA losers)","code":""}]
