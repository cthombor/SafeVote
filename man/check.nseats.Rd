% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_votes.R
\name{check.nseats}
\alias{check.nseats}
\title{parameter-checking method for nseats (internal)}
\usage{
check.nseats(
  nseats = NULL,
  ncandidates,
  default = 1,
  mcan = NULL,
  complete.ranking = FALSE
)
}
\arguments{
\item{nseats}{initially-specified number of seats to be filled in an election}

\item{ncandidates}{the number of candidates standing for election}

\item{default}{the return value of this function when nseats=NULL}

\item{mcan}{a deprecated name for nseats}

\item{complete.ranking}{when TRUE, the return value is in 1..ncandidates
When FALSE, the return value is in 1..ncandidates-1 (for backwards
compatibility)}
}
\value{
a valid non-NULL value for the number of seats to be filled
}
\description{
parameter-checking method for nseats (internal)
}
\examples{
## TODO: port the following tests (from legacy code) into testthat 3e tests
unitTestStatus <- TRUE
## appropriately default nseats, when testing stv() with five candidates
   nc<-5
   nseats<-NULL
   nseats<-SafeVote:::check.nseats(nseats=nseats, ncandidates=nc,
                                   default=floor(nc/2))
   if (nseats != floor(nc/2)) {
     warning("Unit test 1 on check.nseats() failed with nseats =", nseats)
     unitTestStatus <- FALSE
   }
## appropriately default nseats, when using stv() to rank candidates 
   nc<-5
   nseats<-NULL
   nseats<-SafeVote:::check.nseats(nseats=nseats, ncandidates=nc, 
                                   complete.ranking=TRUE, default=nc)
   if (nseats != nc) {
     warning("Unit test 2 on check.nseats() failed with nseats =", nseats)
     unitTestStatus <- FALSE
   }
cat("Unit tests on check.seats():", ifelse(unitTestStatus, "Pass", "Fail"))

}
